<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:webfeeds="http://webfeeds.org/rss/1.0">
  <channel>
    <title>Wing</title>
    <link>/</link>
    <description>Recent content on Wing</description><webfeeds:icon>/images/wing_icon.png</webfeeds:icon>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 26 Jul 2020 14:43:51 +0800</lastBuildDate>
    
        <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>🔝 我的测试观</title>
      <link>/2018/08/24/%E6%88%91%E7%9A%84%E6%B5%8B%E8%AF%95%E8%A7%82/</link>
      <pubDate>Fri, 24 Aug 2018 14:32:45 +0800</pubDate>
      
      <guid>/2018/08/24/%E6%88%91%E7%9A%84%E6%B5%8B%E8%AF%95%E8%A7%82/</guid>
      
        <description>

&lt;h3 id=&#34;软件测试的终极目标&#34;&gt;软件测试的终极目标&lt;/h3&gt;

&lt;p&gt;确保终端用户的满意度&lt;/p&gt;

&lt;h3 id=&#34;软件测试的任务&#34;&gt;软件测试的任务&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;帮助团队对其产品或项目的质量有一个具体的感知&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;有效地完成探索式测试过程，找出系统中隐藏的风险&lt;/li&gt;
&lt;li&gt;有效地开展各种专项测试，统计系统在各类极端环境下的表现&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;提升产品的交付效率和质量&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;在需求阶段开始测试，提出更多的问题和意见，完善异常流程的处理方案&lt;/li&gt;
&lt;li&gt;引导开发完成功能自测，更好地实现质量内建&lt;/li&gt;
&lt;li&gt;制订有效的测试策略，明确测试重点和优先级&lt;/li&gt;
&lt;li&gt;引入或自行开发适合项目的测试工具，提升各阶段测试过程中的效率&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;测试工作的核心&#34;&gt;测试工作的核心&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;测试策略（架构维度）&lt;/li&gt;
&lt;li&gt;测试分析与设计（实施维度）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;测试工程师的核心价值观&#34;&gt;测试工程师的核心价值观&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;强烈的责任意识&lt;/li&gt;
&lt;li&gt;追求完美的精神&lt;/li&gt;
&lt;li&gt;积极的工作态度&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;测试工程师需要具备的素质&#34;&gt;测试工程师需要具备的素质&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;细心、耐心、好奇心&lt;/li&gt;
&lt;li&gt;责任意识、团队意识、持续学习意识&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;测试工程师需要具备的能力&#34;&gt;测试工程师需要具备的能力&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;发现问题能力&lt;/li&gt;
&lt;li&gt;快速学习能力&lt;/li&gt;
&lt;li&gt;逻辑思维能力&lt;/li&gt;
&lt;li&gt;沟通协调能力&lt;/li&gt;
&lt;li&gt;书面表达能力&lt;/li&gt;
&lt;li&gt;代码编写能力&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;独当一面的测试工程师&#34;&gt;独当一面的测试工程师&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;具备独立开展测试工作，完成高质量的项目发布的能力&lt;/li&gt;
&lt;li&gt;具有建立流程，推动流程，优化流程的意识和能力&lt;/li&gt;
&lt;li&gt;主动收集用户的反馈信息，能快速定位问题并积极推动问题的解决&lt;/li&gt;
&lt;li&gt;能编写详尽易读的文档，引导新人更快地加入项目&lt;/li&gt;
&lt;li&gt;积极主动地提升自我，不断以先进的测试理念和技术武装自己&lt;/li&gt;
&lt;/ol&gt;
</description>
      
    </item>
    
    <item>
      <title>搭建自己的静态资源服务器</title>
      <link>/2020/07/26/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Sun, 26 Jul 2020 14:43:51 +0800</pubDate>
      
      <guid>/2020/07/26/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      
        <description>

&lt;blockquote&gt;
&lt;p&gt;最近在学习 Vue 框架，学习过程中需要一个静态资源服务器，故先自己搭建一个供学习使用。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;通过-docker-搭建-nginx-服务器&#34;&gt;通过 docker 搭建 nginx 服务器&lt;/h2&gt;

&lt;h3 id=&#34;安装-docker-以-homebrew-为例&#34;&gt;安装 docker （以 HomeBrew 为例）：&lt;/h3&gt;

&lt;p&gt;安装命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ brew cask install docker&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;下载-nginx-镜像&#34;&gt;下载 nginx 镜像&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/_/nginx&#34;&gt;dockerhub nginx 主页地址&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ docker image pull nginx&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;导出-nginx-默认配置&#34;&gt;导出 nginx 默认配置&lt;/h3&gt;

&lt;p&gt;为了保持环境和目录的干净，先在自己期望的位置下创建一个 docker 目录，&lt;br /&gt;
然后在 docker 目录下再创建一个 docker_nginx 目录。&lt;br /&gt;
之后我们通过命令行进入到 docker_nginx 目录下。&lt;/p&gt;

&lt;p&gt;参考官方文档，导出命令如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ docker run --name tmp-nginx-container -d nginx
$ docker cp tmp-nginx-container:/etc/nginx/ conf/
$ docker rm -f tmp-nginx-container&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此时我们可以看到当前所在 docker_nginx 目录下多出了一个 conf 文件夹，该文件夹下包含的就是 nginx 的相关配置文件。&lt;br /&gt;
其中 nginx.conf 是默认配置文件我们通常不需要修改，conf.d 目录下以 &lt;code&gt;.conf&lt;/code&gt; 结尾的都是自定义配置文件，我们可以根据需要创建或修改。&lt;/p&gt;

&lt;p&gt;为了可以直接在浏览器中看到资源文件目录，我们需要在本地拷贝下来的 docker_nginx/conf/conf.d/default.conf 配置文件中进行一个小修改，&lt;br /&gt;
即在配置文件的 server {&amp;hellip;} 中新增一个配置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;autoindex    on;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意，为了安全在线上时不要开启上述配置。&lt;/p&gt;

&lt;h3 id=&#34;添加资源文件&#34;&gt;添加资源文件&lt;/h3&gt;

&lt;p&gt;在 docker_nginx 下我们先创建一个 content 目录，然后将存放资源文件的文件夹放在 content 目录下，&lt;br /&gt;
练习时可在 content 目录下随意创建一些文件夹和文件。&lt;/p&gt;

&lt;h3 id=&#34;创建容器&#34;&gt;创建容器&lt;/h3&gt;

&lt;p&gt;我们有两种方式创建此次要用到的 nginx 容器&lt;/p&gt;

&lt;h4 id=&#34;方式一&#34;&gt;方式一：&lt;/h4&gt;

&lt;p&gt;我们可以通过 &lt;code&gt;docker run&lt;/code&gt; 命令直接创建并启动容器：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ docker run -d &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -p &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;:80 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -v &lt;span class=&#34;nv&#34;&gt;$PWD&lt;/span&gt;/content:/usr/share/nginx/html:ro &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -v &lt;span class=&#34;nv&#34;&gt;$PWD&lt;/span&gt;/conf:/etc/nginx:ro &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --name my-nginx &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    nginx&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;命令执行成功后通过 &lt;code&gt;docker container ls&lt;/code&gt; 命令可以看到创建成功的 my-nginx 容器。&lt;/p&gt;

&lt;h4 id=&#34;方式二-dockerfile-方式&#34;&gt;方式二：（Dockerfile 方式）&lt;/h4&gt;

&lt;p&gt;我们先在 docker_nginx 目录下新建 Dockerfile 文件，再在 Dockerfile 文件中添加如下内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;FROM nginx
COPY content/ /usr/share/nginx/html/
COPY conf/ /etc/nginx/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后我们可以使用创建好的 Dockerfile 构建一个自定义 nginx 镜像，命令行切换到 docker_nginx 目录，构建命令如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ docker build -t nginx-custom .&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;命令执行成功后通过 &lt;code&gt;docker image ls&lt;/code&gt; 命令可以看到创建成功的 nginx-custom 镜像。&lt;/p&gt;

&lt;p&gt;最后我们可以通过更简洁的 &lt;code&gt;docker run&lt;/code&gt; 命令创建并启动容器：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ docker run -d -p &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;:80 --name my-nginx nginx-custom&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;通过访问-nginx-服务器查看资源&#34;&gt;通过访问 nginx 服务器查看资源&lt;/h3&gt;

&lt;p&gt;现在，通过在浏览器地址栏输入 &lt;a href=&#34;http://localhost/&#34;&gt;http://localhost/&lt;/a&gt; 我们可以直接看到资源文件目录:
&lt;img src=&#34;https://ww1.sinaimg.cn/large/ed19fa55gy1gifwgdin3aj214m0d00tn.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;添加-https-支持&#34;&gt;添加 HTTPS 支持&lt;/h3&gt;

&lt;p&gt;未完待续。。。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Mac 配置 iTerm2 &amp; zsh 终端环境</title>
      <link>/2020/06/19/mac-%E9%85%8D%E7%BD%AE-iterm2-zsh-%E7%BB%88%E7%AB%AF%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Fri, 19 Jun 2020 23:01:23 +0800</pubDate>
      
      <guid>/2020/06/19/mac-%E9%85%8D%E7%BD%AE-iterm2-zsh-%E7%BB%88%E7%AB%AF%E7%8E%AF%E5%A2%83/</guid>
      
        <description>

&lt;blockquote&gt;
&lt;p&gt;最近很悲催，工作用的 2019 款 13“ MacBookPro 主板坏了（据网管说已经坏了好几个了），而且一时大意没有用 Time Machine 做备份（非工作用的倒是做了 🤪🤪🤪），所以趁机水一篇吧。。&lt;br /&gt;
所幸的是重要的文件都用 iCloud 进行了同步（下载好慢 🤪🤪🤪），JetBrains 全家桶和 VSCode 都通过 GitHub gist 进行了同步，所以仅需要手动配置终端环境就 OK 了。&lt;/p&gt;

&lt;p&gt;注：本文大部分配置过程可能需要自行准备梯子，否则遇到连接失败的问题时请自行百度相关工具的国内安装方法&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Homebrew&lt;/strong&gt;: &lt;em&gt;Mac 下最好用的包管理器&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;iTerm2&lt;/strong&gt;: &lt;em&gt;Mac 下最好用的终端工具&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;zsh&lt;/strong&gt;: &lt;em&gt;Mac 下最好用的终端&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Oh My Zsh&lt;/strong&gt;: &lt;em&gt;最好用的 zsh 配置管理工具&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;first-使用-mac-自带终端安装-homebrew&#34;&gt;First. 使用 Mac 自带终端安装 Homebrew&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew 官网&lt;/a&gt; 【_The Missing Package Manager for macOS (or Linux)_】&lt;/p&gt;

&lt;p&gt;安装命令（老规矩 &lt;code&gt;$&lt;/code&gt; 是命令行提示符，执行时不需要输入）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ /bin/bash -c &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;githubusercontent.com 域名我曾一度即使有梯子也因为没有配置终端代理导致命令执行不成功，索性直接通过浏览器打开网址将其作为文件下载下来然后通过执行 &lt;code&gt;/bin/bash -c 文件名&lt;/code&gt; 来完成了安装&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;second-使用-homebrew-安装-iterm2-并进行基础配置&#34;&gt;Second. 使用 Homebrew 安装 iTerm2 并进行基础配置&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.iterm2.com/&#34;&gt;iterm2 官网&lt;/a&gt; 【_iTerm2 - macOS Terminal Replacement_】&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ brew cask install iterm2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;配置 iTerm2 基础设置&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;设置 iTerm2 为默认终端&lt;br /&gt;
   打开并切换到 iTerm2 &amp;gt;&amp;gt; (Mac 左上角菜单栏）iTerm2 &amp;gt;&amp;gt; Make iTerm2 Default Term&lt;/p&gt;

&lt;p&gt;设置 iTerm2 全局热键&lt;br /&gt;
   切换到 iTerm2 &amp;gt;&amp;gt; 打开 Preferences（快捷键为 &lt;code&gt;Command + ,&lt;/code&gt;） &amp;gt;&amp;gt; Keys &amp;gt;&amp;gt; Hotkey &amp;gt;&amp;gt; 勾选 Show/hide iTerm2 with a system-wide hotkey &amp;gt;&amp;gt; 设置 Hotkey 为 &lt;code&gt;Command + .&lt;/code&gt;&lt;br /&gt;
   &lt;em&gt;这样便可通过全局热键 &lt;code&gt;Command + .&lt;/code&gt; 来打开或关闭 iTerm2 窗口&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;third-个性化配置-iterm2-让你的终端工具更加动人&#34;&gt;Third. 个性化配置 iTerm2 让你的终端工具更加动人&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载我最喜欢的 Ayu 主题：&lt;a href=&#34;https://github.com/michelegera/iterm2-ayu-mirage&#34;&gt;Ayu Mirage&lt;/a&gt;，如何在 iTerm2 进行配置链接中也有说明不再赘述。&lt;br /&gt;
喜欢其他主题的如 &lt;a href=&#34;https://ethanschoonover.com/solarized/&#34;&gt;Solarized&lt;/a&gt;，也可按同样的方法自行配置。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;根据自己的喜好配置 Preferences &amp;gt;&amp;gt; Appearance&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;更换字体&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Preferences &amp;gt;&amp;gt; Profiles &amp;gt;&amp;gt; Text &amp;gt;&amp;gt; Font &amp;gt;&amp;gt; 选择一个自己喜欢的字体&lt;br /&gt;
   这里我用的是我最喜欢的 &lt;a href=&#34;https://fonts.google.com/specimen/Roboto+Mono&#34;&gt;Roboto Mono&lt;/a&gt;，粗细为 &lt;code&gt;Bold&lt;/code&gt;，大小为 &lt;code&gt;12&lt;/code&gt;&lt;br /&gt;
   【_强烈建议选用任意一种 &lt;a href=&#34;https://baike.baidu.com/item/%E7%AD%89%E5%AE%BD%E5%AD%97%E4%BD%93&#34;&gt;等宽字体&lt;/a&gt;_】&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Profils 配置完成后导出备份&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Profiles 页左下角 Other Actions&amp;hellip; &amp;gt;&amp;gt; Save Profile As Json&amp;hellip;&lt;br /&gt;
   建议保存在 iCloud 中进行同步&lt;/p&gt;

&lt;h2 id=&#34;fourth-使用-iterm2-安装-oh-my-zsh&#34;&gt;Fourth. 使用 iTerm2 安装 Oh My Zsh&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;zsh 是 Mac 自带，无需安装，仅安装其配置工具 Oh My Zsh 即可&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;https://ohmyz.sh/&#34;&gt;Oh My Zsh&lt;/a&gt; 【_Your terminal never felt this good before_】&lt;/p&gt;

&lt;p&gt;安装命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ sh -c &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;fifth-个性化配置-zsh-让你的终端更加美观&#34;&gt;Fifth. 个性化配置 zsh 让你的终端更加美观&lt;/h2&gt;

&lt;p&gt;使用 iTerm2 打开 zsh 的配置文件 .zsh：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ vim ~/.zsh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后找到 &lt;code&gt;ZSH_THEME&lt;/code&gt; 这个配置项然后将其修改为我最喜欢的一个主题 &lt;code&gt;ZSH_THEME=&amp;quot;ys&amp;quot;&lt;/code&gt;，也可自行知乎安装并设置为其它自己喜欢的主题（仅需要把 &lt;code&gt;ys&lt;/code&gt; 换成喜欢的那个主题名即可，无需任何下载安装）。&lt;/p&gt;

&lt;h2 id=&#34;sixth-使用-homebrew-安装-zsh-插件&#34;&gt;Sixth. 使用 Homebrew 安装 zsh 插件&lt;/h2&gt;

&lt;p&gt;推荐安装两个插件：&lt;code&gt;zsh-autosuggestions&lt;/code&gt; 和 &lt;code&gt;zsh-syntax-highlighting&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ brew install zsh-autosuggestions zsh-syntax-highlighting&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装完成后在 .zshrc 中添加以下两行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span class=&#34;nx&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;/usr/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;local&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/share/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;zsh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;autosuggestions&lt;/span&gt;/&lt;span class=&#34;nx&#34;&gt;zsh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;autosuggestions&lt;/span&gt;.&lt;span class=&#34;nx&#34;&gt;zsh&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;/usr/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;local&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/share/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;zsh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;syntax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;highlighting&lt;/span&gt;/&lt;span class=&#34;nx&#34;&gt;zsh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;syntax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;highlighting&lt;/span&gt;.&lt;span class=&#34;nx&#34;&gt;zsh&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改完成后执行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; ~/.zshrc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;同时配置 vim 语法高亮&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ vim ~/.vimrc  &lt;span class=&#34;c1&#34;&gt;# 没有该文件的话会同时创建&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后添加一行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;syntax on&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;保存便完成了 vim 语法高亮显示&lt;/p&gt;

&lt;p&gt;对其它插件感兴趣的话可以用 Homebrew 搜索一下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ brew search zsh-&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;additional-配置终端网络代理加速你的-homebrew&#34;&gt;Additional. 配置终端网络代理加速你的 Homebrew&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;由于某些原因 Homebrew 在国内下载速度十分慢，试过很多方法都不太理想（如配置各种国内源），只有配置终端网络代理体验极佳（仅仅需要有梯子）&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;打开代理工具，查看代理服务器设置中的 HTTP 端口号&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使用 iTerm2 打开 zsh 的配置文件 .zsh&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ vim ~/.zsh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在文件最底部添加如下两行并保存&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alias proxy=&amp;quot;export ALL_PROXY=&#39;http://127.0.0.1:xxxx&#39;&amp;quot;
alias proxyreset=&amp;quot;unset ALL_PROXY&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在 iTerm2 中执行 &lt;code&gt;proxy&lt;/code&gt; 命令启动代理，执行 &lt;code&gt;proxyreset&lt;/code&gt; 则可关闭代理&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;final-命令行工具推荐&#34;&gt;Final. 命令行工具推荐&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wting/autojump&#34;&gt;autojump&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;可以很方便地在文件夹之间进行跳转，支持通过 Homebrew 安装&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://hisham.hm/htop/&#34;&gt;htop&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;可以很清晰地查看系统进程，支持通过 Homebrew 安装&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;参考来源：&lt;br /&gt;
&lt;a href=&#34;https://www.cnblogs.com/weixuqin/p/7029177.html&#34;&gt;https://www.cnblogs.com/weixuqin/p/7029177.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>Python 魔法方法之自定义实例属性</title>
      <link>/2020/06/17/python-%E9%AD%94%E6%B3%95%E6%96%B9%E6%B3%95%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%9E%E4%BE%8B%E5%B1%9E%E6%80%A7/</link>
      <pubDate>Wed, 17 Jun 2020 12:39:01 +0800</pubDate>
      
      <guid>/2020/06/17/python-%E9%AD%94%E6%B3%95%E6%96%B9%E6%B3%95%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%9E%E4%BE%8B%E5%B1%9E%E6%80%A7/</guid>
      
        <description>

&lt;h1 id=&#34;python-魔法方法之自定义实例属性&#34;&gt;Python 魔法方法之自定义实例属性&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Python 魔法方法系列 让你的代码更加 pythonic&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;getattribute&#34;&gt;__getattribute__()&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;object.__getattribute__(self, name)&lt;/code&gt; 方法用于自定义实例属性的访问，使用时需注意：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;该魔法方法会在访问实例的任何属性时无条件调用。&lt;/li&gt;
&lt;li&gt;重写该魔法方法时需要返回一个属性值或是触发 &lt;code&gt;AttributeError&lt;/code&gt; 异常。&lt;/li&gt;
&lt;li&gt;当定制类继承 &lt;code&gt;Object&lt;/code&gt; 时，同时也会继承该魔法方法，但它没有执行任何操作。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;示例代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Karen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;30&amp;#39;&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__getattribute__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;__getattribute__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;holdon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;I am protector&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;


&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Karen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;holdon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行结果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;fm&#34;&gt;__getattribute__&lt;/span&gt;
&lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;
&lt;span class=&#34;fm&#34;&gt;__getattribute__&lt;/span&gt;
&lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;
&lt;span class=&#34;fm&#34;&gt;__getattribute__&lt;/span&gt;
&lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看出，无论是访问 &lt;code&gt;Karen&lt;/code&gt; 已有的属性 &lt;code&gt;age&lt;/code&gt; 和方法 &lt;code&gt;holdon&lt;/code&gt;，还是没有的属性 &lt;code&gt;sex&lt;/code&gt;，都会执行 &lt;code&gt;__getattribute__&lt;/code&gt; 方法，并返回该方法的返回值。&lt;/p&gt;

&lt;p&gt;当需要其返回属性原有的值的时候，可以返回基类 (Object) 的 &lt;code&gt;__getattribute__&lt;/code&gt; 方法并传递相同的 &lt;code&gt;name&lt;/code&gt; 参数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__getattribute__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;__getattribute__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__getattribute__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;


&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Karen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;holdon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行结果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;fm&#34;&gt;__getattribute__&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;
&lt;span class=&#34;fm&#34;&gt;__getattribute__&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;I&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;am&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;protector&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;另外要注意避免自定义该方法时可能产生的无限递归：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;示例一&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__getattribute__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;__getattribute__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;sex&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
          &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
          &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;holdon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Karen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;protector&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;执行结果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;  &lt;span class=&#34;n&#34;&gt;RecursionError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maximum&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;recursion&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;depth&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exceeded&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calling&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;object&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;示例二&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__getattribute__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;__getattribute__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;holdon&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
          &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;holdon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__getattribute__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Karen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;holdon&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;执行结果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;  &lt;span class=&#34;fm&#34;&gt;__getattribute__&lt;/span&gt;
  &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;
  &lt;span class=&#34;fm&#34;&gt;__getattribute__&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;RecursionError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maximum&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;recursion&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;depth&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exceeded&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calling&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;object&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;getattr&#34;&gt;__getattr__()&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;object.__getattr__(self, name)&lt;/code&gt; 方法同样用于自定义实例属性的访问，使用时需注意：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;该魔法方法会在默认属性访问失败触发 &lt;code&gt;AttributeError&lt;/code&gt; 时被调用。

&lt;ul&gt;
&lt;li&gt;该魔法方法因参数 &lt;code&gt;name&lt;/code&gt; 不是实例属性而触发 &lt;code&gt;AttributeError&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;该魔法方法因参数 &lt;code&gt;name&lt;/code&gt; 不是类树中用于 &lt;code&gt;self&lt;/code&gt; 的属性而触发 &lt;code&gt;AttributeError&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;因 &lt;code&gt;name.__get__()&lt;/code&gt; 触发 &lt;code&gt;AttributeError&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;重写该方法时需要返回一个属性值或是触发 &lt;code&gt;AttributeError&lt;/code&gt; 异常。&lt;/li&gt;
&lt;li&gt;当定制类继承 &lt;code&gt;Object&lt;/code&gt; 时，同时也会继承 &lt;code&gt;object.__getattribute__(self, name)&lt;/code&gt;，但它没有执行任何操作。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;参考来源：&lt;br /&gt;
&lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#special-method-names&#34;&gt;https://docs.python.org/3/reference/datamodel.html#special-method-names&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>Python 魔法方法之自定义实例</title>
      <link>/2020/06/17/python-%E9%AD%94%E6%B3%95%E6%96%B9%E6%B3%95%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%9E%E4%BE%8B/</link>
      <pubDate>Wed, 17 Jun 2020 12:38:01 +0800</pubDate>
      
      <guid>/2020/06/17/python-%E9%AD%94%E6%B3%95%E6%96%B9%E6%B3%95%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%9E%E4%BE%8B/</guid>
      
        <description>

&lt;h1 id=&#34;python-魔法方法之自定义实例&#34;&gt;Python 魔法方法之自定义实例&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Python 魔法方法系列 让你的代码更加 pythonic&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;构造函数-析构函数&#34;&gt;构造函数 &amp;amp; 析构函数&lt;/h2&gt;

&lt;p&gt;学习 Python 的自定义实例魔法方法前需要先了解两个概念，&lt;strong&gt;构造函数&lt;/strong&gt; 和 &lt;strong&gt;析构函数&lt;/strong&gt;。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;【构造函数】是一种特殊的方法，主要用来在创建对象时初始化对象，即为对象成员变量赋初始值。&lt;br /&gt;
【析构函数】与构造函数相反，当对象结束其生命周期，如对象所在的函数已调用完毕时，系统自动执行析构函数。析构函数往往用来做“清理善后” 的工作。&lt;br /&gt;
&amp;mdash;来源于百度百科&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在 Python 中，&lt;code&gt;__new__()&lt;/code&gt; 和 &lt;code&gt;__init__()&lt;/code&gt; 方法组合起来扮演了构造函数的角色，而 &lt;code&gt;__del__()&lt;/code&gt; 方法起到了析构函数的作用。&lt;/p&gt;

&lt;h2 id=&#34;new&#34;&gt;__new__()&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;object.__new__(cls[, ...])&lt;/code&gt; 方法用于实例的创建，使用时需注意：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;该魔法方法接收被请求创建该实例的类作为其第一个参数，其余参数将被传递给对象构造函数表达式&lt;/li&gt;
&lt;li&gt;该魔法方法需要返回一个新的对象（通常是 cls）实例，否则 &lt;code&gt;__init__()&lt;/code&gt; 方法将不会被调用&lt;/li&gt;

&lt;li&gt;&lt;p&gt;该魔法方法主要目的是给不可变类型的子类提供自定义实例的创建，以及用于自定义元类（用于创建自定义类）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 通过 __new__() 函数实现单例模式&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Singleton&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__new__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;instance&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;instance&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Singleton&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__new__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;instance&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;init&#34;&gt;__init__()&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;object.__init__(self[, ...])&lt;/code&gt; 方法用于实例的初始化，使用时需注意：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;该魔法方法会在实例被创建后调用&lt;/li&gt;
&lt;li&gt;参数来源于传递给类构造函数表达式的函数参数&lt;/li&gt;
&lt;li&gt;该魔法方法不能返回任何非 None 的值&lt;/li&gt;

&lt;li&gt;&lt;p&gt;如果父类含有该魔法方法，则子类的该魔法方法中必须显式地调用父类的该魔法方法（以确保实例的父类部分被正确地初始化）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ，实例化时不会报错&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Demo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;     &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;         &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;·&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Demo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 可以返回 None 值，系统不报错&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Demo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;     &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;         &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Demo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 可以直接 return，系统不报错&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Demo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;     &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;         &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Demo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 不能返回非 None 的值，系统报 TypeError&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Traceback&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;most&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;recent&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;last&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;File&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ne&#34;&gt;TypeError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;should&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;int&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;del&#34;&gt;__del__()&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;object.__del__(self)&lt;/code&gt; 方法用于实例销毁前的清理工作，使用时需注意：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;该魔法方法会在实例被销毁时调用&lt;/li&gt;
&lt;li&gt;如果父类含有该魔法方法，则子类的该魔法方法中必须显式地调用父类的该魔法方法（以确保实例的父类部分正确进行了销毁操作）&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;参考来源：&lt;br /&gt;
&lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#special-method-names&#34;&gt;https://docs.python.org/3/reference/datamodel.html#special-method-names&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>Python 时间与日期处理</title>
      <link>/2020/03/23/python-%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F%E5%A4%84%E7%90%86/</link>
      <pubDate>Mon, 23 Mar 2020 11:46:24 +0800</pubDate>
      
      <guid>/2020/03/23/python-%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F%E5%A4%84%E7%90%86/</guid>
      
        <description>

&lt;h1 id=&#34;python-时间与日期处理&#34;&gt;Python 时间与日期处理&lt;/h1&gt;

&lt;h2 id=&#34;内置库&#34;&gt;内置库&lt;/h2&gt;

&lt;h3 id=&#34;time-模块&#34;&gt;time 模块&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/library/time.html#&#34;&gt;https://docs.python.org/3/library/time.html#&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1ga80i0l694j20go07i752.jpg&#34; alt=&#34;时间转换&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;class-time-struct-time-实例&#34;&gt;&lt;code&gt;class time.struct_time&lt;/code&gt; 实例&lt;/h4&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;索引&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;实例属性&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;含义&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;tm_year&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;年&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;eg: 2020&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;tm_mon&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;月&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;range [1, 12]&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;tm_mday&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;日&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;range [1, 31]&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;tm_hour&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;小时&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;range [0, 23]&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;tm_min&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;分钟&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;range [0, 59]&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;tm_sec&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;秒&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;range [0, 61]&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;tm_wday&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;周&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;range [0, 6]，周一为 0&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;tm_yday&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;天&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;range [1, 366]&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;tm_isdst&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;时令&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0, 1 或 -1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;N/A&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;tm_zone&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;时区名称缩写&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;N/A&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;tm_gmtoff&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;-&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;以秒为单位的 UTC 以东偏离&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&#34;示例代码&#34;&gt;示例代码&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;导入库：&lt;code&gt;import time&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;获取当前时间时间戳&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;                       &lt;span class=&#34;c1&#34;&gt;# 原始时间数据&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;                  &lt;span class=&#34;c1&#34;&gt;# 秒级时间戳&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;# 毫秒级时间戳&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1000000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;# 微秒级时间戳&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;获取当天的年月日&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;localtime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tm_year&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 年&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;localtime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tm_mon&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# 月&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;localtime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tm_mday&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 日&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;获取对应时间的格式化字符串&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 当前时间&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;asctime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;# &amp;#39;Wed Mar  4 17:34:54 2020&amp;#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ctime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;# &amp;#39;Wed Mar  4 17:34:54 2020&amp;#39;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 指定时间&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;asctime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;localtime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;# &amp;#39;Thu Jan  1 08:00:00 1970&amp;#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ctime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;                      &lt;span class=&#34;c1&#34;&gt;# &amp;#39;Thu Jan  1 08:00:00 1970&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;时间戳转换成时间字符串&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1577808000&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;time_local&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;localtime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timestamp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;time_str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strftime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; %H:%M:%S&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;time_local&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# &amp;#39;2020-01-01 00:00:00&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;时间字符串转换成时间戳&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;time_str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;2020-01-01 00:00:00&amp;#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;struct_time&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strptime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time_str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; %H:%M:%S&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mktime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;struct_time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 1577808000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;datetime-模块&#34;&gt;datetime 模块&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/library/datetime.html#&#34;&gt;https://docs.python.org/3/library/datetime.html#&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1ga80gxo6u0j20go07igmk.jpg&#34; alt=&#34;日期转换&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;class-datetime-datetime-常用属性和方法&#34;&gt;&lt;code&gt;class datetime.datetime&lt;/code&gt; 常用属性和方法&lt;/h4&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;类属性&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;含义&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;min&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;最早的可表示的 datetime&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;datetime(1, 1, 1, 0, 0)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;max&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;最晚的可表示的 datetime&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;datetime(9999, 12, 31, 23, 59, 59, 999999)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;类方法&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;含义&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;返回值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;today()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回当前本地 datetime (tz=None)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;datetime 实例对象&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;now(tz=None)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回当前时区 datetime&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;datetime 实例对象&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;utcnow()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回当前 UTC datetime&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;datetime 实例对象&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;fromtimestamp(timestamp, tz=None)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回指定时间戳对应时区时间的 datetime&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;datetime 实例对象&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;utcfromtimestamp(timestamp)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回指定时间戳对应 UTC 时间的 datetime&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;datetime 实例对象&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;fromisoformat(date_string)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;将符合 ISO 8601 日期与时间组合表示法的字符串转换成 datetime&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;datetime 实例对象&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;strptime(date_string, format)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;将指定时间字符串转换成对应的时间&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;datetime 实例对象&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;实例属性&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;含义&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;year&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;年&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;month&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;月&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;day&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;日&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;hour&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;时&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;minute&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;分&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;second&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;秒&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;microsecond&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;微秒&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;实例方法&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;含义&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;返回值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;date()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回与 datetime 年月日相同的 date 对象&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;datetime.date(&amp;hellip;)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;time()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回与 datetime 时分秒微秒以及 fold 相同的 time 对象&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;datetime.time(&amp;hellip;)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;timetuple()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回 datetime 相同的 time.struct_time 对象&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;time.struct_time(&amp;hellip;)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;utctimetuple()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;timestamp()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;weekday()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回 datetime 星期的序数&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;rang(7)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;isoformat(&amp;hellip;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回 datetime 符合 ISO 8601 日期与时间组合表示法的字符串&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;eg: &amp;lsquo;2020-02-02T02:02:02.222222&amp;rsquo;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ctime()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回 datetime 的格式化字符串&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;eg: &amp;lsquo;Thu Mar 5 10:43:53 2020&amp;rsquo;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;strftime(format)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;将 datetime 转换成对应格式的字符串&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&#34;示例代码-1&#34;&gt;示例代码&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;导入库：&lt;code&gt;from datetime import datetime&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;获取当前日期和时间：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 2017-12-24 21:56:22.698000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;获取当天的年月日&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;today&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# now = datetime.fromtimestamp(time.time()) 同上&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# 年&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;month&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 月&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;day&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;# 日&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;格式化成需要的时间：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strftime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;_%H-%M-%S&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 2020-02-02_02-02-02&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;格式化为 ISO 8601 的日期和时间的组合表示法&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;方式一：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;datetime&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timedelta&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tz&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timedelta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hours&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isoformat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;方式二：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pytz&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tz&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pytz&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Asia/Shanghai&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isoformat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;方式三：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strftime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;T%T+08:00&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;calendar-模块&#34;&gt;calendar 模块&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/library/calendar.html#&#34;&gt;https://docs.python.org/3/library/calendar.html#&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;示例代码-2&#34;&gt;示例代码&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;导入库：&lt;code&gt;import calendar&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;获取某年某月的最大天数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;calendar&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;monthrange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2020&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;第三方库&#34;&gt;第三方库&lt;/h2&gt;

&lt;h3 id=&#34;dateutil-库&#34;&gt;dateutil 库&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;安装：&lt;code&gt;$ pip install python-dateutil&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;导入库：&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;附：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;术语表：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-plain&#34; data-lang=&#34;plain&#34;&gt;UTC (Coordinated Universal Time, 国际协调时间)
以原子时秒长为基础，在时刻上尽量接近于世界时的一种时间计量系统。

GMT (Greenwich Mean Time, 格林威治标准时间)
格林尼治所在地的标准时间，也是表示地球自转速率的一种形式。以地球自转为基础的时间计量系统。

DST (Daylight Saving Time, 日光节约时间)
为了节约能源人为规定的一种时间。

CST
可视为如下4个不同的时区的缩写：
美国中部时间：Central Standard Time (USA) UT-6:00
澳大利亚中部时间：Central Standard Time (Australia) UT+9:30
中国标准时间：China Standard Time UT+8:00
古巴标准时间：Cuba Standard Time UT-4:00&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;时间参数格式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-plain&#34; data-lang=&#34;plain&#34;&gt;%a 星期几的简写
%A 星期几的全称
%b 月份的简写
%B 月份的全称
%c 标准的日期的时间串
%C 年份的后两位数字
%d 十进制表示的每月的第几天
%D 月/天/年
%e 在两字符域中，十进制表示的每月的第几天
%F 年-月-日
%g 年份的后两位数字，使用基于周的年
%G 年分，使用基于周的年
%h 简写的月份名
%H 24小时制的小时
%I 12小时制的小时
%j 十进制表示的每年的第几天
%m 十进制表示的月份
%M 十时制表示的分钟数
%n 新行符
%p 本地的AM或PM的等价显示
%r 12小时的时间
%R 显示小时和分钟：hh:mm
%S 十进制的秒数
%t 水平制表符
%T 显示时分秒：hh:mm:ss
%u 每周的第几天，星期一为第一天 （值从0到6，星期一为0）
%U 第年的第几周，把星期日做为第一天（值从0到53）
%V 每年的第几周，使用基于周的年
%w 十进制表示的星期几（值从0到6，星期天为0）
%W 每年的第几周，把星期一做为第一天（值从0到53）
%x 标准的日期串
%X 标准的时间串
%y 不带世纪的十进制年份（值从0到99）
%Y 带世纪部分的十制年份
%z，%Z 时区名称，如果不能得到时区名称则返回空字符。
%% 百分号&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;参考来源：&lt;br /&gt;
&lt;a href=&#34;https://docs.python.org/zh-cn/3/library/time.html&#34;&gt;https://docs.python.org/zh-cn/3/library/time.html&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://docs.python.org/3/library/datetime.html#&#34;&gt;https://docs.python.org/3/library/datetime.html#&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://zhuanlan.zhihu.com/p/23679915&#34;&gt;https://zhuanlan.zhihu.com/p/23679915&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>wrk 性能测试工具详解</title>
      <link>/2019/11/12/wrk-%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Tue, 12 Nov 2019 16:52:49 +0800</pubDate>
      
      <guid>/2019/11/12/wrk-%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%E8%AF%A6%E8%A7%A3/</guid>
      
        <description>

&lt;blockquote&gt;
&lt;p&gt;建议练习时可以使用 flask 等 Web 框架在本地搭建一个 HTTP 服务&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;wrk-简介&#34;&gt;wrk 简介&lt;/h2&gt;

&lt;p&gt;wrk 是一个用于 HTTP 协议的基准测试工具。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;基准测试是一种性能测试方法，它通过设计科学的测试方法、测试工具和测试系统，实现对一类测试对象的某项性能指标进行定量和可对比的测试。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;GitHub 地址：&lt;a href=&#34;https://github.com/wg/wrk&#34;&gt;https://github.com/wg/wrk&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;

&lt;p&gt;Mac 直接使用 HomeBrew 进行安装&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ brew install wrk&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;命令行选项&#34;&gt;命令行选项&lt;/h2&gt;

&lt;p&gt;在命令行中输入 &lt;code&gt;wrk&lt;/code&gt; 查看命令行选项：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ wrk
Usage: wrk &amp;lt;options&amp;gt; &amp;lt;url&amp;gt;
  Options:
    -c, --connections &amp;lt;N&amp;gt;  Connections to keep open
                            &lt;span class=&#34;c1&#34;&gt;# 设置总的 http 并发连接数&lt;/span&gt;
    -d, --duration    &amp;lt;T&amp;gt;  Duration of &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt;
                            &lt;span class=&#34;c1&#34;&gt;# 设置测试持续时间&lt;/span&gt;
    -t, --threads     &amp;lt;N&amp;gt;  Number of threads to use
                            &lt;span class=&#34;c1&#34;&gt;# 设置开启的线程数（不能大于设置的并发请求数）&lt;/span&gt;
    -s, --script      &amp;lt;S&amp;gt;  Load Lua script file
                            &lt;span class=&#34;c1&#34;&gt;# 加载指定的 Lua 脚本&lt;/span&gt;
    -H, --header      &amp;lt;H&amp;gt;  Add header to request
                            &lt;span class=&#34;c1&#34;&gt;# 添加 http 请求头&lt;/span&gt;
        --latency          Print latency statistics
                            &lt;span class=&#34;c1&#34;&gt;# 打印延迟统计情况（建议启用）&lt;/span&gt;
        --timeout     &amp;lt;T&amp;gt;  Socket/request timeout
    -v, --version          Print version details

  Numeric arguments may include a SI unit &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1k, 1M, 1G&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
  Time arguments may include a &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; unit &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;2s, 2m, 2h&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;基础示例&#34;&gt;基础示例&lt;/h2&gt;

&lt;p&gt;GET 请求：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ wrk -c100 -t10 -d10s --latency http://localhost:5000/test_get
&lt;span class=&#34;c1&#34;&gt;# 100 个请求分 10 个线程压 10 秒&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;控制台输出：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;Running 10s &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt; @ http://localhost:5000/test_get
  &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; threads and &lt;span class=&#34;m&#34;&gt;100&lt;/span&gt; connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency   &lt;span class=&#34;m&#34;&gt;201&lt;/span&gt;.71ms   &lt;span class=&#34;m&#34;&gt;58&lt;/span&gt;.06ms &lt;span class=&#34;m&#34;&gt;451&lt;/span&gt;.62ms   &lt;span class=&#34;m&#34;&gt;79&lt;/span&gt;.16%
    Req/Sec    &lt;span class=&#34;m&#34;&gt;27&lt;/span&gt;.94     &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;.18    &lt;span class=&#34;m&#34;&gt;70&lt;/span&gt;.00     &lt;span class=&#34;m&#34;&gt;73&lt;/span&gt;.70%
  Latency Distribution
     &lt;span class=&#34;m&#34;&gt;50&lt;/span&gt;%  &lt;span class=&#34;m&#34;&gt;196&lt;/span&gt;.82ms
     &lt;span class=&#34;m&#34;&gt;75&lt;/span&gt;%  &lt;span class=&#34;m&#34;&gt;228&lt;/span&gt;.07ms
     &lt;span class=&#34;m&#34;&gt;90&lt;/span&gt;%  &lt;span class=&#34;m&#34;&gt;261&lt;/span&gt;.79ms
     &lt;span class=&#34;m&#34;&gt;99&lt;/span&gt;%  &lt;span class=&#34;m&#34;&gt;394&lt;/span&gt;.08ms
  &lt;span class=&#34;m&#34;&gt;2817&lt;/span&gt; requests in &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;.10s, &lt;span class=&#34;m&#34;&gt;473&lt;/span&gt;.18KB &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt;
Requests/sec:    &lt;span class=&#34;m&#34;&gt;278&lt;/span&gt;.94
Transfer/sec:     &lt;span class=&#34;m&#34;&gt;46&lt;/span&gt;.86KB&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr /&gt;

&lt;p&gt;POST 请求：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ wrk -c100 -t10 -d10s -s test_post.lua --latency http://localhost:5000/test_post
&lt;span class=&#34;c1&#34;&gt;# 使用 test_post.lua 脚本&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lua 脚本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;n&#34;&gt;wrk.method&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;POST&amp;#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;wrk.headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;application/json&amp;#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;wrk.body&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;k1&amp;#34;:1,&amp;#34;k2&amp;#34;:2}&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;控制台输出：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;Running 10s &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt; @ http://localhost:5000/test_post
  &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; threads and &lt;span class=&#34;m&#34;&gt;100&lt;/span&gt; connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency   &lt;span class=&#34;m&#34;&gt;188&lt;/span&gt;.49ms   &lt;span class=&#34;m&#34;&gt;60&lt;/span&gt;.76ms &lt;span class=&#34;m&#34;&gt;352&lt;/span&gt;.02ms   &lt;span class=&#34;m&#34;&gt;67&lt;/span&gt;.50%
    Req/Sec    &lt;span class=&#34;m&#34;&gt;38&lt;/span&gt;.35     &lt;span class=&#34;m&#34;&gt;23&lt;/span&gt;.71   &lt;span class=&#34;m&#34;&gt;101&lt;/span&gt;.00     &lt;span class=&#34;m&#34;&gt;67&lt;/span&gt;.22%
  Latency Distribution
     &lt;span class=&#34;m&#34;&gt;50&lt;/span&gt;%  &lt;span class=&#34;m&#34;&gt;182&lt;/span&gt;.22ms
     &lt;span class=&#34;m&#34;&gt;75&lt;/span&gt;%  &lt;span class=&#34;m&#34;&gt;230&lt;/span&gt;.92ms
     &lt;span class=&#34;m&#34;&gt;90&lt;/span&gt;%  &lt;span class=&#34;m&#34;&gt;272&lt;/span&gt;.66ms
     &lt;span class=&#34;m&#34;&gt;99&lt;/span&gt;%  &lt;span class=&#34;m&#34;&gt;325&lt;/span&gt;.02ms
  &lt;span class=&#34;m&#34;&gt;3665&lt;/span&gt; requests in &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;.10s, &lt;span class=&#34;m&#34;&gt;604&lt;/span&gt;.87KB &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt;
Requests/sec:    &lt;span class=&#34;m&#34;&gt;362&lt;/span&gt;.77
Transfer/sec:     &lt;span class=&#34;m&#34;&gt;59&lt;/span&gt;.87KB&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注：GET 请求同样可以使用 Lua 脚本&lt;/p&gt;

&lt;h2 id=&#34;进阶用法&#34;&gt;进阶用法&lt;/h2&gt;

&lt;h3 id=&#34;lua-脚本在压测时的全局变量-tabel-wrk&#34;&gt;Lua 脚本在压测时的全局变量 (tabel) wrk&lt;/h3&gt;

&lt;h4 id=&#34;全局变量&#34;&gt;全局变量&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;n&#34;&gt;wrk&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;scheme&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;host&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;method&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{},&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;thread&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;userdata&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;全局方法&#34;&gt;全局方法&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;wrk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;--[[
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;  wrk.format 方法返回一个 HTTP 请求的字符串，包含传入参数与 wrk 变量的值的组合。
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;wrk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;lookup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;service&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;--[[
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;  wrk.lookup 方法返回一个包含主机所有已知地址的 table 和服务对，这对应于 POSIX 的 getaddrinfo() 方法
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;-- host:一个主机名或者地址串(IPv4的点分十进制串或者IPv6的16进制串)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;-- service：服务名可以是十进制的端口号，也可以是已定义的服务名称，如ftp、http等&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;wrk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;--[[
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;  判断 addr 是否可以连接上，返回布尔值。addr 必须是一个 wrk.lookup() 方法的返回值。
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;lua-脚本的生命周期钩子&#34;&gt;Lua 脚本的生命周期钩子&lt;/h3&gt;

&lt;h4 id=&#34;启动阶段-setup&#34;&gt;启动阶段 (Setup)&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;启动阶段开始于请求目标 IP 地址已解析且所有线程已经初始化但还没启动的时候&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;setup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;thread&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;--[[
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;  在脚本文件中实现 setup 方法，wrk 就会在目标 IP 已解析且测试线程初始化完成但还没有启动的时候调用该方法。
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;  wrk 会为每一个测试线程调用一次 setup 方法，并传入代表测试线程的对象 thread 作为参数。
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;  setup 方法中可操作该 thread 对象，获取信息、存储信息、甚至关闭该线程。
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;  setup 方法每个线程只执行一次。
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;  thread 对象提供了 1 个属性，3 个方法：
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    thread.addr 获取或设置线程的服务器地址
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    thread:get(name) 获取线程全局变量
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    thread:set(name, value) 设置线程全局变量
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    thread:stop() 终止线程
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;运行阶段-running&#34;&gt;运行阶段 (Running)&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;运行阶段开始于对 init 方法的单次调用，让后在每个请求周期都调用一次 request 和 response 方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;-- 每个线程仅调用 1 次，args 用于获取当前脚本命令行中所有传入的其它命令参数，例如 --env=pre&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;delay&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;-- 每次发起请求前调用 1 次，在 request 方法前调用，单位为 ms&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;-- 每次发起请求前调用 1 次，返回一个包含 HTTP 请求的字符串，wrk 会按该字符串的内容发起 HTTP 请求。&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;-- 通常会在该方法中调用 wrk.format() 生成 HTTP 请求字符串。&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;-- 每次请求返回时调用 1 次，wrk 通过传入 HTTP 响应码，响应头，响应体调用。&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;结束阶段-done&#34;&gt;结束阶段 (Done)&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;done&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;summary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;latency&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;--[[
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;  done 方法接收一个包含测试结果数据的 table 变量 summary 以及两个分别表示每个请求的延迟时间和每个线程的 QPS 的统计对象。持续时间和延迟时间单位均为 ms。
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;  整个测试过程中仅被调用 1 次。
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;  summary = {
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    duration = N,  -- 运行持续时间，单位为 ms
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    requests = N,  -- 总共完成的请求书
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    bytes    = N,  -- 总共接收的数据量
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    errors   = {
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;      connect = N, -- socket 连接总失败数
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;      read    = N, -- socket 连接读取总失败数
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;      write   = N, -- socket 连接写入总失败数
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;      status  = N, -- total HTTP status codes &amp;gt; 399
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;      timeout = N  -- total request timeouts
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    }
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;  }
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;  latency.min              -- 最小延时
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;  latency.max              -- 最大延时
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;  latency.mean             -- 平均延时
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;  latency.stdev            -- 延时标准差
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;  latency:percentile(99.0) -- 99th percentile value
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;  latency(i)               -- raw value and count
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;调用过程示例&#34;&gt;调用过程示例&lt;/h4&gt;

&lt;p&gt;命令行语句：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ wrk -c1 -t1 -d1s -s test_lua.lua http://localhost:5000&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;lua 脚本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/usr/local/bin/lua&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;wrk.body&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;k1&amp;#34;:666}&amp;#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/test_post&amp;#34;&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;setup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;thread&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;调用 setup()&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;thread.addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;调用 init()&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;delay&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;调用 delay() 等待 500 ms&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;调用 resquest()&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wrk.format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;POST&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;调用 response()&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;then&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/test_get?k1=&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;..&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;done&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;summary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;latency&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;调用 done()&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;控制台输出：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;调用 setup&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;m&#34;&gt;127&lt;/span&gt;.0.0.1:5000
调用 init&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
调用 resquest&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
Running 1s &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt; @ http://localhost:5000
  &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; threads and &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; connections
调用 delay&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; 等待 &lt;span class=&#34;m&#34;&gt;500&lt;/span&gt; ms
调用 resquest&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
调用 response&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
调用 delay&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; 等待 &lt;span class=&#34;m&#34;&gt;500&lt;/span&gt; ms
调用 resquest&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
调用 response&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
调用 delay&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; 等待 &lt;span class=&#34;m&#34;&gt;500&lt;/span&gt; ms
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency     &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;.08ms  &lt;span class=&#34;m&#34;&gt;135&lt;/span&gt;.06us   &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;.17ms  &lt;span class=&#34;m&#34;&gt;100&lt;/span&gt;.00%
    Req/Sec     &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;.50      &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.71     &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;.00    &lt;span class=&#34;m&#34;&gt;100&lt;/span&gt;.00%
  &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; requests in &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;.01s, &lt;span class=&#34;m&#34;&gt;525&lt;/span&gt;.00B &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt;
  Non-2xx or 3xx responses: &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
Requests/sec:      &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;.98
Transfer/sec:     &lt;span class=&#34;m&#34;&gt;519&lt;/span&gt;.09B
调用 &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;HTTP 请求日志：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;m&#34;&gt;127&lt;/span&gt;.0.0.1 - - &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15&lt;/span&gt;/Nov/2019 &lt;span class=&#34;m&#34;&gt;11&lt;/span&gt;:10:02&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;POST /test_post HTTP/1.1&amp;#34;&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;200&lt;/span&gt; -
&lt;span class=&#34;m&#34;&gt;127&lt;/span&gt;.0.0.1 - - &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15&lt;/span&gt;/Nov/2019 &lt;span class=&#34;m&#34;&gt;11&lt;/span&gt;:10:03&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;POST /test_get?k1={&amp;#34;&lt;/span&gt;k1&lt;span class=&#34;s2&#34;&gt;&amp;#34;:666} HTTP/1.1&amp;#34;&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;405&lt;/span&gt; -&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;更多使用示例参见：&lt;a href=&#34;https://github.com/wg/wrk/tree/master/scripts&#34;&gt;https://github.com/wg/wrk/tree/master/scripts&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;参考来源：&lt;br /&gt;
&lt;a href=&#34;https://github.com/wg/wrk&#34;&gt;https://github.com/wg/wrk&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://github.com/wg/wrk/blob/master/README.md&#34;&gt;https://github.com/wg/wrk/blob/master/README.md&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://github.com/wg/wrk/blob/master/SCRIPTING&#34;&gt;https://github.com/wg/wrk/blob/master/SCRIPTING&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://juejin.im/post/5a59e74f5188257353008fea#heading-10&#34;&gt;https://juejin.im/post/5a59e74f5188257353008fea#heading-10&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://www.cnblogs.com/xinzhao/p/6233009.html&#34;&gt;https://www.cnblogs.com/xinzhao/p/6233009.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>计算机字符编码详解</title>
      <link>/2019/10/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Mon, 28 Oct 2019 00:58:33 +0800</pubDate>
      
      <guid>/2019/10/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E8%AF%A6%E8%A7%A3/</guid>
      
        <description>

&lt;blockquote&gt;
&lt;p&gt;程序员如果不弄懂字符编码它就会像幽灵一般纠缠你整个职业生涯，各种灵异事件会接踵而来，挥之不去。&lt;br /&gt;
&amp;mdash; 刘志军 [知乎]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;1 bit  = 2 种两种可能性（0或1）
1 byte = 1 字节 = 8 bit = 2 ^ 8 次方 = 256 种可能性&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;字符编码简介&#34;&gt;字符编码简介&lt;/h2&gt;

&lt;p&gt;在计算机中，所有的数据在存储和运算时都要使用二进制数表示（因为计算机用高电平和低电平分别表示 1 和 0），而具体用哪些二进制数字表示哪个符号，当然每个人都可以约定自己的一套（这就叫编码规则）。&lt;/p&gt;

&lt;h3 id=&#34;ascii&#34;&gt;ASCII&lt;/h3&gt;

&lt;p&gt;ASCII（American Standard Code for Information Interchange，美国信息交换标准代码）&lt;/br&gt;
是一种&lt;strong&gt;单字节&lt;/strong&gt;的编码方案，指定的 7 位或 8 位二进制数组合来表示 128 或 256 种可能的字符，主要用于显示现代英语。&lt;/p&gt;

&lt;h3 id=&#34;mbcs&#34;&gt;MBCS&lt;/h3&gt;

&lt;p&gt;MBCS（Muilti-Bytes Charecter Set，多字节字符集）&lt;/br&gt;
使用&lt;strong&gt;两个字节&lt;/strong&gt;来代表一个字符的各种汉字延伸编码方式，又称为 ANSI 编码。&lt;/br&gt;
在简体中文系统下，ANSI 编码代表 &lt;code&gt;GB2312&lt;/code&gt; 编码；日文操作系统下，ANSI 编码代表 &lt;code&gt;Shift_JIS&lt;/code&gt; 编码；韩文操作系统下，ANSI 编码代表 &lt;code&gt;Euc-kr&lt;/code&gt; 编码。&lt;/br&gt;
不统一的编码标准会不可避免地出现冲突。&lt;/p&gt;

&lt;h3 id=&#34;gbk-和-gb2312&#34;&gt;GBK 和 gb2312&lt;/h3&gt;

&lt;p&gt;见上&lt;/p&gt;

&lt;h3 id=&#34;ucs&#34;&gt;UCS&lt;/h3&gt;

&lt;p&gt;Universal Character Set, UCS（中文：通用字符集）是由 ISO 制定的 ISO 10646（或称 ISO/IEC 10646）标准所定义的标准字符集。&lt;/br&gt;
UCS-2：使用两个定长的字节来表示一个字符。&lt;/br&gt;
UCS-4：是一个更大的尚未填充完全的 31 位字符集，加上恒为 0 的首位，共需占据 32 位，即&lt;strong&gt;四字节&lt;/strong&gt;。理论上最多能表示 231 个字符，完全可以涵盖一切语言所用的符号。&lt;/p&gt;

&lt;h3 id=&#34;unicode&#34;&gt;Unicode&lt;/h3&gt;

&lt;p&gt;Unicode（中文：万国码、国际码、统一码、单一码）是计算机科学领域里的一项业界标准，包括字符集、编码方案等。&lt;/br&gt;
Unicode 伴随着 UCS 的标准而发展，至今仍在不断增修，每个新版本都加入更多新的字符。&lt;/br&gt;
当前实际应用的 Unicode 版本对应于 UCS-2，每个字符占用&lt;strong&gt;两个字节&lt;/strong&gt;。&lt;/br&gt;
由于计算机的内存比较大，并且字符串在内容中表示时也不会特别大，所以在&lt;strong&gt;计算机内存&lt;/strong&gt;中使用 Unicode 来处理字符。&lt;/p&gt;

&lt;h3 id=&#34;utf-8&#34;&gt;UTF-8&lt;/h3&gt;

&lt;p&gt;UTF-8（8-bit Unicode Transformation Format）是一种针对 Unicode 字符集 的可变长度字符编码规则。&lt;/br&gt;
UTF-8 使用&lt;strong&gt;一至四个字节&lt;/strong&gt;为每个字符编码，可以用来表示 Unicode 标准中的任何字符。&lt;/br&gt;
UTF-8 的特点是对不同范围的字符使用不同长度的编码。对于 0x00-0x7F 之间的字符，UTF-8 编码与 ASCII 编码完全相同，因此可以说 ASCII 是 UTF-8 的子集。&lt;/p&gt;

&lt;h3 id=&#34;utf-16-和-utf-32&#34;&gt;UTF-16 和 UTF-32&lt;/h3&gt;

&lt;h3 id=&#34;unicode-和-utf-8-的区别&#34;&gt;Unicode 和 UTF-8 的区别&lt;/h3&gt;

&lt;p&gt;UTF，是为 Unicode 字符集设计的一种在&lt;strong&gt;存储和传输&lt;/strong&gt;时节省空间的实现方式。&lt;/br&gt;
简单来说：Unicode 是「字符集」，UTF-8 是「编码规则」。&lt;/br&gt;
从通信角度的理论来说：unicode 是信源编码，对字符集数字化；UTF-8 是信道编码，为更好的存储和传输。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Unicode 编码(十六进制)&lt;/th&gt;
&lt;th&gt;UTF-8 字节流(二进制)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;00000000 - 0000007F&lt;/td&gt;
&lt;td&gt;0xxxxxxx&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;00000080 - 000007FF&lt;/td&gt;
&lt;td&gt;110xxxxx 10xxxxxx&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;00000800 - 0000FFFF&lt;/td&gt;
&lt;td&gt;1110xxxx 10xxxxxx 10xxxxxx&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;00010000 - 001FFFFF&lt;/td&gt;
&lt;td&gt;1110xxxx 10xxxxxx 10xxxxxx 10xxxxxx&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;00200000 - 03FFFFFF&lt;/td&gt;
&lt;td&gt;1110xxxx 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;04000000 - 7FFFFFFF&lt;/td&gt;
&lt;td&gt;1110xxxx 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;python-中字符编码问题&#34;&gt;Python 中字符编码问题&lt;/h2&gt;

&lt;p&gt;在 Python 中，解释器会在解释执行代码前，先将代码通过系统默认编码方式读入系统内存，再由编译器以特定编码格式编码交付虚拟机解释执行。&lt;/br&gt;
即在 Python 2.x 中，解释器默认会将代码以 ASCII 编码方式读入系统内存，但编译器却不会在内存中将代码自动转换为 Unicode；&lt;/br&gt;
而在 Python 3.x 中，解释器默认会将代码以 UTF-8 编码方式读入系统内存，并且编译器会在内存中将代码自动转换为 Unicode。&lt;/p&gt;

&lt;h3 id=&#34;python-查看系统默认编码格式问题&#34;&gt;Python 查看系统默认编码格式问题&lt;/h3&gt;

&lt;p&gt;在 Python2.x 的版本中，系统默认编码格式为 &lt;code&gt;ascii&lt;/code&gt;，我们可以通过以下代码查看 Python 的系统默认编码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getdefaultencoding&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;&amp;#39;ascii&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;python2-x-文件头部设置编码格式&#34;&gt;Python2.x 文件头部设置编码格式&lt;/h3&gt;

&lt;p&gt;当我们在 Python2.x 文件的开头加上 &lt;code&gt;# -*- coding: gbk -*-&lt;/code&gt; 或 &lt;code&gt;# encoding=utf-8&lt;/code&gt; 时，会告诉 Python 解释器读取该文件时的编码方式是 &lt;code&gt;utf-8&lt;/code&gt;，这时，Python 解释器便会将代码通过 UTF-8 的方式读入系统内存，同时编译器也只会把代码以 UTF-8 的编码格式交付虚拟机解释执行。&lt;/p&gt;

&lt;h3 id=&#34;python2-7-编码处理&#34;&gt;Python2.7 编码处理&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;将 unicode 输出成中文：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;unic&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\u4f60\u597d&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unic&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;unicode-escape&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;你好&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;python3-x-编码处理&#34;&gt;Python3.x 编码处理&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;将 unicode 输出成中文：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;unic&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;图解&#34;&gt;图解&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph TB
Unicode --&amp;gt; |encode| GBK
Unicode --&amp;gt; |encode| UTF-8
GBK --&amp;gt; |decode| Unicode
UTF-8 --&amp;gt; |decode| Unicode&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;sequenceDiagram
Unicode码-&amp;gt;&amp;gt;字符:decode(unicode-escape)
字符-&amp;gt;&amp;gt;Unicode码:encode(unicode-escape)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;参考&lt;/strong&gt;：&lt;br /&gt;
&lt;a href=&#34;https://zh.wikipedia.org/wiki/Unicode&#34;&gt;https://zh.wikipedia.org/wiki/Unicode&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://foofish.net/unicode_utf-8.html&#34;&gt;https://foofish.net/unicode_utf-8.html&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://www.zhihu.com/question/31833164/answer/381137073&#34;&gt;https://www.zhihu.com/question/31833164/answer/381137073&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>Python 函数参数详解</title>
      <link>/2019/10/06/python-%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Sun, 06 Oct 2019 16:14:18 +0800</pubDate>
      
      <guid>/2019/10/06/python-%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E8%AF%A6%E8%A7%A3/</guid>
      
        <description>

&lt;h1 id=&#34;python-函数参数详解&#34;&gt;Python 函数参数详解&lt;/h1&gt;

&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;最近在跟同事讨论一个方法的调用时涉及到了 Python 函数的位置参数和关键字参数的相关知识，发现之前学习 Python 时对函数参数研究的并不透彻，且很多地方已经有些生疏了，故而查阅了一下 Python 官方文档和廖雪峰的官网中的相关知识，并记录总结如下。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;argument-和-parameter&#34;&gt;Argument 和 Parameter&lt;/h2&gt;

&lt;p&gt;Python 函数参数根据使用情况的不同需要分为 Parameter 和 Argument 两部分进行讨论。&lt;/p&gt;

&lt;h3 id=&#34;argument&#34;&gt;Argument&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Argument 指的是函数调用时的实际参数，即实参 (actual parameter)，也可以称为引数。
Python 中有两种 Argument，分别是「位置参数」和「关键字参数」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;位置参数-positional-argument&#34;&gt;位置参数 [positional argument]&lt;/h4&gt;

&lt;p&gt;位置参数使用时可以放在参数列表的开头，和/或是以一个带有 &lt;code&gt;*&lt;/code&gt; 前缀的可迭代的元素表示，以内置函数 complex() 的调用为例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;complex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;complex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;code&gt;*&lt;/code&gt; 表示将可迭代对象扩展为函数的参数列表&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;关键字参数-keyword-argument&#34;&gt;关键字参数 [keyword argument]&lt;/h4&gt;

&lt;p&gt;关键字参数使用时需要用标识符指明（&lt;code&gt;name=&lt;/code&gt; 的形式），或是以一个带有 &lt;code&gt;**&lt;/code&gt; 前缀的字典表示，以内置函数 complex() 的调用为例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;complex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;real&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;imag&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;complex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;real&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;imag&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;code&gt;**&lt;/code&gt; 表示将字典扩展为函数的关键字参数&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;parameter&#34;&gt;Parameter&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Parameter 指的是函数定义时的形式参数，即形参 (formal parameter)。Python 中有五种 Parameter，分别是「位置或关键字参数」、「仅位置参数」、「仅关键字参数」、「可变位置参数」、「可变关键字参数」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;位置或关键字参数-positional-or-keyword&#34;&gt;位置或关键字参数 [positional-or-keyword]&lt;/h4&gt;

&lt;p&gt;位置或关键字参数在函数调用时可以以位置参数 (positional argument) 或关键字参数 (keyword argument) 的形式提供。它是默认的参数类型。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foo1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;foo2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中 foo1 也可称为非默认参数 [non-default parameter]；foo2 可称为默认参数 [default parameter]，默认参数带有默认值，可以简化函数调用。&lt;/p&gt;

&lt;p&gt;注意，在函数定义时非默认参数必须在默认参数之前。&lt;/p&gt;

&lt;h4 id=&#34;仅位置参数-positional-only&#34;&gt;仅位置参数 [positional-only]&lt;/h4&gt;

&lt;p&gt;仅位置参数在函数调用时只能由位置参数 (positional argument) 提供。Python 没有提供定义该参数的语法，它只在一些内置函数中存在，例如 &lt;code&gt;abs()&lt;/code&gt;。&lt;/p&gt;

&lt;h4 id=&#34;仅关键字参数-keyword-only&#34;&gt;仅关键字参数 [keyword-only]&lt;/h4&gt;

&lt;p&gt;仅关键字参数在函数调用时只能由关键字参数 (keyword argument) 提供，它可以对函数传入的关键字参数进行限制。
仅关键字参数定义时需要在其之前紧邻一个可变位置参数或增加一个特殊分割符 &lt;code&gt;*&lt;/code&gt;。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;含有可变位置参数时以可变位置参数为分割，可变位置参数后都是仅关键字参数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;city&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;city&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;可以这样调用 ta&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;test_arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;beijin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;wfp&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;25&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;hoker&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;test_arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;beijin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;wfp&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;shanghai&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;25&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;hoker&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是不能这样调用 ta&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;test_arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;beijin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;wfp&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;25&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;hoker&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;会提示缺少一个参数，定义了命名关键字参数的话，必须要把全部的关键字参数传入进去&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;没有可变位置参数时，增加一个 &lt;code&gt;*&lt;/code&gt; 作为特殊分隔符，&lt;code&gt;*&lt;/code&gt; 后面的都是仅关键字参数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test_arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;city&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;city&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;&lt;code&gt;*&lt;/code&gt; 作为特殊分割符使用&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;仅关键字参数可以设置默认值，从而简化调用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;city&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Beijing&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;city&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;由于参数 city 具有默认值，调用时，可不传入 city 参数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&amp;gt;&amp;gt;&amp;gt; person&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Jack&amp;#39;&lt;/span&gt;, &lt;span class=&#34;m&#34;&gt;24&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Engineer&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
Jack &lt;span class=&#34;m&#34;&gt;24&lt;/span&gt; Beijing Engineer&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;使用命名关键字参数时，要特别注意，如果没有可变参数，就必须加一个 。如果缺少 &lt;code&gt;*&lt;/code&gt; Python 解释器将无法识别 positional-or-keyword 和 keyword-only&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;可变位置参数-var-positional&#34;&gt;可变位置参数 [var-positional]&lt;/h4&gt;

&lt;p&gt;可变参数很简单，在 C/C++ 和 Java 等语言中都有，就是用 &lt;code&gt;*args&lt;/code&gt; 号来表示，例如&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test_arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;*&lt;/code&gt; 表示将函数调用时的多个参数打包成一个元组&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;你可以传入任意多个元素（包括 0）到参数中，在函数调用时会自动被认为是一个元组&lt;/p&gt;

&lt;h4 id=&#34;可变关键字参数-var-keyword&#34;&gt;可变关键字参数 [var-keyword]&lt;/h4&gt;

&lt;p&gt;可变关键字参数在 python 中习惯用 &lt;code&gt;**kwargs&lt;/code&gt; 表示，可以传入 0 到任意多个“关键字-值”，参数在函数内部被当做一个字典&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test_arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kwargs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test_arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;city&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kwargs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;**&lt;code&gt;**&lt;/code&gt; 表示将函数调用时的多个关键字参数打包成一个字典**&lt;/p&gt;

&lt;p&gt;可以这样调用它&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;test_arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;John&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;hoker&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;test_arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;beijin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;john&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;关键字参数可以用来后期扩充函数的功能，例如：先设定必要的参数，之后选择性的增加可选参数。&lt;/p&gt;

&lt;h4 id=&#34;parameter-组合使用时的顺序&#34;&gt;Parameter 组合使用时的顺序&lt;/h4&gt;

&lt;p&gt;位置或关键字参数-非默认参数 &amp;gt; 位置或关键字参数-默认参数 &amp;gt; 可变位置参数 &amp;gt; 仅关键字参数 &amp;gt; 可变关键字参数&lt;/p&gt;

&lt;h2 id=&#34;参考来源&#34;&gt;参考来源&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3.6/glossary.html#term-parameter&#34;&gt;https://docs.python.org/3.6/glossary.html#term-parameter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3.6/glossary.html#term-argument&#34;&gt;https://docs.python.org/3.6/glossary.html#term-argument&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3.6/faq/programming.html#faq-argument-vs-parameter&#34;&gt;https://docs.python.org/3.6/faq/programming.html#faq-argument-vs-parameter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.liaoxuefeng.com/wiki/1016959663602400/1017261630425888&#34;&gt;https://www.liaoxuefeng.com/wiki/1016959663602400/1017261630425888&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Mac 上修改 MySQL Workbench 主题配色</title>
      <link>/2019/09/30/mac-%E4%B8%8A%E4%BF%AE%E6%94%B9-mysql-workbench-%E4%B8%BB%E9%A2%98%E9%85%8D%E8%89%B2/</link>
      <pubDate>Mon, 30 Sep 2019 15:52:42 +0800</pubDate>
      
      <guid>/2019/09/30/mac-%E4%B8%8A%E4%BF%AE%E6%94%B9-mysql-workbench-%E4%B8%BB%E9%A2%98%E9%85%8D%E8%89%B2/</guid>
      
        <description>&lt;blockquote&gt;
&lt;p&gt;在 Mac 上使用了 Mojava 的深色主题，当我安装 Mysql Workbench 时，它也默认使用了深色主题的配色，但 Mysql Workbench 的深色主题让我十分不适应，因此想改为浅色主题，但发现设置中根本没有和主题相关的配置，Google 了好久终于找到了一种方法&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;从深色主题修改为浅色主题：（在命令行中执行以下命令）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ defaults write com.oracle.workbench.MySQLWorkbench NSRequiresAquaSystemAppearance -bool yes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;从浅色主题恢复为深色主题：（仅需将上条命令中的 yes 改为 no 然后重新执行一遍命令）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ defaults write com.oracle.workbench.MySQLWorkbench NSRequiresAquaSystemAppearance -bool no&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;重新打开 MySQL Workbench 客户端即可生效&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;参考来源：&lt;br /&gt;
&lt;a href=&#34;https://stackoverflow.com/questions/17325408/mysql-workbench-dark-theme&#34;&gt;https://stackoverflow.com/questions/17325408/mysql-workbench-dark-theme&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Mon, 16 Sep 2019 11:13:42 +0800</pubDate>
      
      <guid>/about/</guid>
      
        <description></description>
      
    </item>
    
    <item>
      <title>一种 RF 测试环境参数化配置方法</title>
      <link>/2019/08/26/%E4%B8%80%E7%A7%8D-rf-%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%E5%8F%82%E6%95%B0%E5%8C%96%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95/</link>
      <pubDate>Mon, 26 Aug 2019 15:06:49 +0800</pubDate>
      
      <guid>/2019/08/26/%E4%B8%80%E7%A7%8D-rf-%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%E5%8F%82%E6%95%B0%E5%8C%96%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95/</guid>
      
        <description>&lt;blockquote&gt;
&lt;p&gt;自动化测试脚本通常都需要在不同环境中运行，良好的测试环境参数化配置会使脚本的运行具备较高的灵活性。
Robot Framework 框架支持一种「嵌套变量」的特性，我们可以利用该特性完成一种优雅的环境参数化配置。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;cp&#34;&gt;***&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Variables&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;***&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 环境管理&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;${environment}&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;staging&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 域名管理&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;${host_api}&lt;span class=&#34;w&#34;&gt;               &lt;/span&gt;${host_api_${environment}}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;${host_api_test}&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;https&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;//api-test.xxx.com&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;${host_api_staging}&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;https&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;//api-staging.xxx.com&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;${host_api-other}&lt;span class=&#34;w&#34;&gt;               &lt;/span&gt;${host_api-other_${environment}}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;${host_api-other_test}&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;https&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;//api-other-test.xxx.com&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;${host_api-other_staging}&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;https&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;//api-other-staging.xxx.com&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      
    </item>
    
    <item>
      <title>一份测试计划提纲</title>
      <link>/2019/07/01/%E4%B8%80%E4%BB%BD%E6%B5%8B%E8%AF%95%E8%AE%A1%E5%88%92%E6%8F%90%E7%BA%B2/</link>
      <pubDate>Mon, 01 Jul 2019 11:58:28 +0800</pubDate>
      
      <guid>/2019/07/01/%E4%B8%80%E4%BB%BD%E6%B5%8B%E8%AF%95%E8%AE%A1%E5%88%92%E6%8F%90%E7%BA%B2/</guid>
      
        <description>

&lt;blockquote&gt;
&lt;p&gt;最近在听茹炳晟老师的《软件测试 52 讲》，其中“以终为始，如何才能做好测试计划？”一章讲了关于测试计划的制定，读完之后我感觉受益匪浅。&lt;br /&gt;
从事测试工作以来，我似乎一直在刻意忽略如何制定测试计划的问题，毕竟按照敏捷的思想，过多的文档编写是不建议的，在平时的工作中，测试计划又感觉是最无关紧要的。&lt;br /&gt;
听了茹炳晟老师的讲解之后，忽然发现我们一直在要求产品、开发同学要想清楚之后再干，而自身却并没有做到，并且测试计划不一定是要做的细致全面形成文档。简单的一个提纲，帮助我们在测试之前好好想想也会大有裨益。&lt;br /&gt;
尤其是作为一名测试 Leader，更应该重视测试计划的制定，帮助团队更加高效地完成工作。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;测试范围&#34;&gt;测试范围&lt;/h2&gt;

&lt;h3 id=&#34;测试什么&#34;&gt;测试什么&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;识别测试需求&lt;/li&gt;
&lt;li&gt;确认代码影响范围&lt;/li&gt;
&lt;li&gt;确认功能交互范围&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;不测什么&#34;&gt;不测什么&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;划定测试边界&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;测试策略&#34;&gt;测试策略&lt;/h2&gt;

&lt;h3 id=&#34;明确测试重点&#34;&gt;明确测试重点&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;测试重点需要和版本目标相契合&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;测试优先级&#34;&gt;测试优先级&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;核心功能&lt;/li&gt;
&lt;li&gt;重要功能&lt;/li&gt;
&lt;li&gt;一般功能&lt;/li&gt;
&lt;li&gt;辅助功能&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;测试层次&#34;&gt;测试层次&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;单元测试&lt;/li&gt;
&lt;li&gt;集成测试&lt;/li&gt;
&lt;li&gt;系统测试&lt;/li&gt;
&lt;li&gt;验收测试&lt;/li&gt;
&lt;li&gt;回归测试&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;测试类型&#34;&gt;测试类型&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;功能测试&lt;/li&gt;
&lt;li&gt;兼容性测试&lt;/li&gt;
&lt;li&gt;性能测试&lt;/li&gt;
&lt;li&gt;易用性测试&lt;/li&gt;
&lt;li&gt;可靠性测试&lt;/li&gt;
&lt;li&gt;安全性测试&lt;/li&gt;
&lt;li&gt;合规性测试&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;测试方法&#34;&gt;测试方法&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;单元（白盒）：代码检查法、代码静态分析、逻辑覆盖法（语句、判定、条件、判定/条件、条件组合、路径）&lt;/li&gt;
&lt;li&gt;功能（黑盒/灰盒）：等价类、边界值、因果图、决策表、场景法、正交分割&lt;/li&gt;
&lt;li&gt;性能：基准测试、压力测试、负载测试、并发测试、疲劳测试、容量测试、配置测试&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;测试资源&#34;&gt;测试资源&lt;/h2&gt;

&lt;h3 id=&#34;人力资源-解决谁来测的问题&#34;&gt;人力资源（解决谁来测的问题）&lt;/h3&gt;

&lt;p&gt;应根据测试工程师的级别安排对应困难度的测试任务&lt;/p&gt;

&lt;h3 id=&#34;软硬件环境-解决在哪测-用什么测的问题&#34;&gt;软硬件环境（解决在哪测、用什么测的问题）&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;测试环境（需要哪些测试环境，是否有部署方案）&lt;/li&gt;
&lt;li&gt;测试工具（需要使用哪些测试工具，是否需要提前申请）&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;测试进度&#34;&gt;测试进度&lt;/h2&gt;

&lt;h3 id=&#34;测试开始时间&#34;&gt;测试开始时间&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;依赖于开发提测时间&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&#34;测试工作量&#34;&gt;测试工作量&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;测试用例编写时间&lt;/li&gt;
&lt;li&gt;单元测试时间&lt;/li&gt;
&lt;li&gt;功能测试执行时间&lt;/li&gt;
&lt;li&gt;探索式测试时间&lt;/li&gt;
&lt;li&gt;自动化测试用例编写时间&lt;/li&gt;
&lt;li&gt;性能测试时间&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;预计完成时间&#34;&gt;预计完成时间&lt;/h3&gt;

&lt;p&gt;在计划时间上增加 30% 的 buffer 时间&lt;/p&gt;

&lt;h2 id=&#34;测试风险预估&#34;&gt;测试风险预估&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;明确如何有效应对各种潜在的变化&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;需求变更（增加/删减/修改）&lt;/li&gt;
&lt;li&gt;测试范围变更&lt;/li&gt;
&lt;li&gt;测试架构修改&lt;/li&gt;
&lt;li&gt;开发提测延期&lt;/li&gt;
&lt;li&gt;测试人员变动&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;参考来源：
&lt;a href=&#34;https://time.geekbang.org/column/intro/103&#34;&gt;https://time.geekbang.org/column/intro/103&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>配置自己的 Linux 云服务器</title>
      <link>/2019/06/21/%E9%85%8D%E7%BD%AE%E8%87%AA%E5%B7%B1%E7%9A%84-linux-%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Fri, 21 Jun 2019 15:30:40 +0800</pubDate>
      
      <guid>/2019/06/21/%E9%85%8D%E7%BD%AE%E8%87%AA%E5%B7%B1%E7%9A%84-linux-%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      
        <description>

&lt;blockquote&gt;
&lt;p&gt;近期趁着 6.18 促销新采购了一台阿里云的 Linux 服务器，把配置过程记录如下&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;采购云服务器&#34;&gt;采购云服务器&lt;/h2&gt;

&lt;p&gt;采购平台：阿里云 腾讯云 百度云&lt;br /&gt;
Linux 系统：Ubuntu&lt;/p&gt;

&lt;h2 id=&#34;配置云服务器&#34;&gt;配置云服务器&lt;/h2&gt;

&lt;h3 id=&#34;登录-linux-远程服务器&#34;&gt;登录 Linux 远程服务器&lt;/h3&gt;

&lt;p&gt;在本地终端使用 &lt;code&gt;ssh&lt;/code&gt; 命令连接服务器并输入密码登录（以下使用 &lt;hostname&gt; 代指服务器 ip）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ ssh root@&amp;lt;hostname&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;配置个性化警告语&#34;&gt;配置个性化警告语&lt;/h3&gt;

&lt;p&gt;修改 Linux 系统远程登录欢迎语（&lt;code&gt;/etc/motd&lt;/code&gt; 文件记录了用户登录后警告信息，并且不区分本地和远程）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# vim /etc/motd&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;复制以下内容，或使用其它更加&lt;a href=&#34;https://blog.csdn.net/ydk888888/article/details/81563608&#34;&gt;有趣的代码注释&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;                  ___====-_  _-====___
            _--^^^#####//      \\#####^^^--_
        _-^##########// (    ) \\##########^-_
        -############//  |\^^/|  \\############-
      _/############//   (@::@)   \\############\_
    /#############((     \\//     ))#############\
    -###############\\    (oo)    //###############-
  -#################\\  / VV \  //#################-
  -###################\\/      \//###################-
_#/|##########/\######(   /\   )######/\##########|\#_
|/ |#/\#/\#/\/  \#/\##\  |  |  /##/\#/  \/\#/\#/\#| \|
`  |/  V  V  `   V  \#\| |  | |/#/  V   &amp;#39;  V  V  \|  &amp;#39;
    `   `  `      `   / | |  | | \   &amp;#39;      &amp;#39;  &amp;#39;   &amp;#39;
                    (  | |  | |  )
                    __\ | |  | | /__
                  (vvv(VVV)(VVV)vvv)
                      如未被授权
                      请您即刻退出！&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改 Ubuntu 系统的默认欢迎语
注释掉 &lt;code&gt;10-help-text&lt;/code&gt; 文件中的相关信息（如果有）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# vim /etc/update-motd.d/10-help-text&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#printf &amp;#34;\n&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#printf &amp;#34; * Documentation:  https://help.ubuntu.com\n&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#printf &amp;#34; * Management:     https://landscape.canonical.com\n&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#printf &amp;#34; * Support:        https://ubuntu.com/advantage\n&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注释掉 &lt;code&gt;80-livepatch&lt;/code&gt; 文件中的相关信息（如果有）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# vim /etc/update-motd.d/80-livepatch&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#case &amp;#34;$livepatch_status&amp;#34; in&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#    &amp;#34;disabled (not available)&amp;#34;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#        # do nothing&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#        ;;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#    &amp;#34;enabled&amp;#34;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#        echo&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#        echo &amp;#34; * Canonical Livepatch is enabled.&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#        print_status &amp;#34;${check_state}&amp;#34; &amp;#34;${patch_state}&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#        ;;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#    &amp;#34;disabled&amp;#34;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#        echo&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#        echo &amp;#34; * Canonical Livepatch is available for installation.&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#        echo &amp;#34;   - Reduce system reboots and improve kernel security. Activate at:&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#        echo &amp;#34;     https://ubuntu.com/livepatch&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#        ;;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#    *)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#        echo&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#        echo &amp;#34; * Canonical Livepatch is in an unknown state.&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#        echo &amp;#34;   - Please see /var/log/syslog for more information.&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#        echo &amp;#34;     Status: \&amp;#34;$livepatch_status\&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#        ;;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#esac&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;配置用户&#34;&gt;配置用户&lt;/h3&gt;

&lt;p&gt;新建用户（以下使用 &lt;username&gt; 代指实际用户名）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# useradd -r -m -s /bin/bash &amp;lt;username&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;设置用户密码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# passwd &amp;lt;username&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;检查用户是否创建成功&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# cat /etc/passwd&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;给用户配置免密码 &lt;code&gt;sudo&lt;/code&gt; 权限&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# vim /etc/sudoers&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;将文件中下面的这一段&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;# Allow members of group sudo to execute any command
%sudo   ALL=(ALL:ALL) ALL&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;# Allow members of group sudo to execute any command
%sudo   ALL=(ALL) NOPASSWD:ALL&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后将新建的 &lt;username&gt; 用户加入 sudo 用户组&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# usermod -a -G sudo &amp;lt;username&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;配置命令提示符 hostname 的显示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# vim /etc/hostname&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;将内容改成自己想要的如 ali-ecs
重启服务器&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# reboot&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;配置-ssh-key-方式登录-linux-远程服务器&#34;&gt;配置 SSH Key 方式登录 Linux 远程服务器&lt;/h3&gt;

&lt;p&gt;登录新建的 &lt;username&gt; 用户&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ssh &amp;lt;username&amp;gt;@&amp;lt;hostname&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输入之前设置的密码进行登录
创建 &lt;code&gt;.ssh&lt;/code&gt; 文件夹和 &lt;code&gt;authorized_keys&lt;/code&gt; 并授予权限&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ mkdir ~/.ssh &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; touch ~/.ssh/authorized_keys
$ chmod &lt;span class=&#34;m&#34;&gt;700&lt;/span&gt; ~/.ssh &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; chmod &lt;span class=&#34;m&#34;&gt;600&lt;/span&gt; ~/.ssh/authorized_keys&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后将本地机器 &lt;code&gt;id_rsa.pub&lt;/code&gt; 中的文本复制添加到服务器的 &lt;code&gt;authorized_keys&lt;/code&gt; 文件里
下次登录则无需输入密码
另外还可通过在本地设置 .ssh 目录下配置 config 文件，通过以下命令直接登录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ ssh &amp;lt;username&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      
    </item>
    
    <item>
      <title>什么是软件质量</title>
      <link>/2019/06/12/%E4%BB%80%E4%B9%88%E6%98%AF%E8%BD%AF%E4%BB%B6%E8%B4%A8%E9%87%8F/</link>
      <pubDate>Wed, 12 Jun 2019 22:32:47 +0800</pubDate>
      
      <guid>/2019/06/12/%E4%BB%80%E4%B9%88%E6%98%AF%E8%BD%AF%E4%BB%B6%E8%B4%A8%E9%87%8F/</guid>
      
        <description>

&lt;h3 id=&#34;一-软件质量是什么&#34;&gt;一、软件质量是什么&lt;/h3&gt;

&lt;p&gt;GB T 25000.10-2016 标准（基于 ISO/IEC 25010:2011 标准）中将软件质量定义为：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;在规定条件下使用时，软件满足用户明确和隐含要求的能力。满足程度越高，质量就越好。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;其中隐含的要求是指可能未明确阐述确实实际需要的要求。&lt;br&gt;
站在用户角度来看，我们可以说质量就是 ==终端用户的满意度== 。&lt;/p&gt;

&lt;h3 id=&#34;二-软件质量模型&#34;&gt;二、软件质量模型&lt;/h3&gt;

&lt;p&gt;想要清楚地知道明确和隐含的要求是什么，我们需要建立软件质量模型。GB/T 25000.10-2016 中将软件质量模型分为使用质量模型和产品质量模型，其中使用质量模型由 5 个质量特性组成，产品质量模型由 8 个质量特性组成。&lt;/p&gt;

&lt;p&gt;产品质量可以认为是软件系统自身固有的内在特征和外部表现，而使用质量是从用户使用的角度去感知到的质量，产品质量和使用质量的关系如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55ly1g6cxq3vkalj20em06bq2z.jpg&#34; alt=&#34;image.jpg&#34; /&gt;&lt;/p&gt;

&lt;h6 id=&#34;使用质量模型&#34;&gt;使用质量模型&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;有效性

&lt;ul&gt;
&lt;li&gt;有效性「用户实现指定目标的准确性和完备性」&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;效率

&lt;ul&gt;
&lt;li&gt;效率「与用户实现目标的准确性和完备性相关的资源消耗」&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;满意度「产品或系统在指定的使用周境中使用时，用户的要求被满足的程度」

&lt;ul&gt;
&lt;li&gt;有用性「用户对实用目标的实现感到满意的程度，包括使用的结果和使用后产生的后果」&lt;/li&gt;
&lt;li&gt;可信性「用户或者其它利益相关方对产品或系统将如预期地运行有信心的程度」&lt;/li&gt;
&lt;li&gt;愉悦度「用户因个人要求被满足而获得愉悦感的程度」&lt;/li&gt;
&lt;li&gt;舒适性「用户生理上感到满意的程度」&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;抗风险「产品或系统在经济现状、人的生命、健康或环境方面缓解潜在风险的程度」

&lt;ul&gt;
&lt;li&gt;经济风险缓解性「在预期的使用周境中，产品或系统在经济现状、高效运行、商业财产、信誉或其它资源方面缓解潜在风险的程度」&lt;/li&gt;
&lt;li&gt;健康和安全风险缓解性「在预期的使用周境中，产品或系统缓解人员潜在风险的程度」&lt;/li&gt;
&lt;li&gt;环境风险缓解性「在预期的使用周境中，产品或系统在财产或环境方面缓解潜在风险的程度」&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;周境覆盖「在指定的使用周境和超出最初设定需求的周境中，产品或系统在有效性、效率、抗风险和满意度特性方面能够被使用的程度」

&lt;ul&gt;
&lt;li&gt;周境完备性「在所有指定的使用周境中，产品或系统在有效性、效率、抗风险和满意度特性方面能够被使用的程度」&lt;/li&gt;
&lt;li&gt;灵活性「在超出最初设定的需求的周境中，产品或系统在有效性、效率、抗风险和满意度特性方面能够被使用的程度」&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&#34;产品质量模型&#34;&gt;产品质量模型&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;功能性「在指定条件下使用产品时，产品或系统提供满足明确和隐含要求的功能的程度」

&lt;ul&gt;
&lt;li&gt;功能完备性「功能集对指定的任务和用户目标的覆盖程度」&lt;/li&gt;
&lt;li&gt;功能正确性「产品或系统提供具有所需精度的正确的结果的程度」&lt;/li&gt;
&lt;li&gt;功能适合性「功能促使指定的任务和目标实现的程度」&lt;/li&gt;
&lt;li&gt;功能性的依从性「产品或系统遵循与功能性相关的标准、约定或法规以及类似规定的程度」&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;性能效率「性能与在指定条件下所使用的资源量有关」

&lt;ul&gt;
&lt;li&gt;时间特性「产品或系统执行其功能时，其响应时间、处理时间及吞吐率满足需求的程度」&lt;/li&gt;
&lt;li&gt;资源利用性「产品或系统执行其功能时，所使用资源数量和类型满足需求的程度」&lt;/li&gt;
&lt;li&gt;容量「产品或系统参数的最大限量满足需求的程度」&lt;/li&gt;
&lt;li&gt;性能效率的依从性「产品或系统遵循与性能效率相关的标准、约定或法规以及类似规定的程度」&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;兼容性「在共享相同软硬件环境的条件下，产品、系统或组件能够与其它产品、系统或组件交换信息，和/或执行其所需的功能的程度」

&lt;ul&gt;
&lt;li&gt;共存性「在与其它产品共享通用的环境和资源条件下，产品能够有效执行其所需的功能并且不会对其它产品造成负面影响的程度」&lt;/li&gt;
&lt;li&gt;互操作性「两个或多个系统、产品或组件能够交换信息并使用已交换的信息的程度」&lt;/li&gt;
&lt;li&gt;兼容性的依从性「产品或系统遵循与兼容性相关的标准、约定或法规以及类似规定的程度」&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;易用性「在指定的使用周境中，产品或系统在有效性、效率和满意度特性方面为了指定的目标可为指定用户使用的程度」

&lt;ul&gt;
&lt;li&gt;可辨识性「用户能够辨识产品或系统是否适合他们的要求的程度」&lt;/li&gt;
&lt;li&gt;易学性「在指定的使用周境中，产品或系统在有效性、效率、抗风险和满意度特性方面为了学习使用该产品或系统这一指定的目标可为指定用户使用的程度」&lt;/li&gt;
&lt;li&gt;易操作性「产品或系统具有易于操作和控制的属性的程度」&lt;/li&gt;
&lt;li&gt;用户差错防御性「系统预防用户犯错的程度」&lt;/li&gt;
&lt;li&gt;用户界面舒适性「用户界面提供令人愉悦和满意的交互的程度」&lt;/li&gt;
&lt;li&gt;易访问性「在指定的使用周境中，为了达到指定的目标，产品或系统被具有最广泛的特征和能力的个体所使用的程度」&lt;/li&gt;
&lt;li&gt;易用性的依从性「产品或系统遵循与易用性相关的标准、约定或法规以及类似规定的程度」&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;可靠性「软件在指定条件下、指定的时间内执行指定功能的程度」

&lt;ul&gt;
&lt;li&gt;成熟性「软件在正常运行时能够进行操作和访问的程度」&lt;/li&gt;
&lt;li&gt;可用性「软件在需要使用时能够进行操作和访问的程度」&lt;/li&gt;
&lt;li&gt;容错性「在出现内部或外部故障时，软件的运行符合预期的程度」&lt;/li&gt;
&lt;li&gt;易恢复性「在发生中断或失效时，系统或产品能够恢复直接受影响的数据并重建期望的系统状态的程度」&lt;/li&gt;
&lt;li&gt;可靠性的依从性「系统或产品遵循与可靠性相关的标准、约定或法规以及类似规定的程度。」&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;信息安全性「产品或系统保护信息和数据的程度，以使用户、其他产品或系统具有」

&lt;ul&gt;
&lt;li&gt;保密性「产品或系统确保数据只有在被授权时才能被访问的程度」&lt;/li&gt;
&lt;li&gt;完整性「系统、产品或组件防止未授权访问、篡改计算机程序或数据的程度」&lt;/li&gt;
&lt;li&gt;抗抵赖性「活动或事件发生后可以被证实且不可被否认的程度」&lt;/li&gt;
&lt;li&gt;可核查性「实体的活动可以被唯一地追溯到该实体的程度」&lt;/li&gt;
&lt;li&gt;真实性「对象或资源的身份标识能够被证实符合其声明的程度」&lt;/li&gt;
&lt;li&gt;信息安全性的依从性「产品或系统遵循与信息安全性相关的标准、约定或法规以及类似规定的程度」&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;维护性「产品或系统能够被预期的维护人员修改的有效性和效率的程度」

&lt;ul&gt;
&lt;li&gt;模块化「由多个独立组件组成的系统或计算机程序，其中一个组件的变更对其他组件的影响最小的程度」&lt;/li&gt;
&lt;li&gt;可重用性「资产能够被用于多个系统，或其它资产建设的程度」&lt;/li&gt;
&lt;li&gt;易分析性「可以评估预期变更（变更产品或系统的一个或多个部分）对产品或系统的影响、诊断产品的缺陷或失效原因、识别待修改部分的有效性和效率的程度」&lt;/li&gt;
&lt;li&gt;易修改性「产品或系统可以被有效地、有效率地修改，且不会引入缺陷或降低现有产品质量的程度」&lt;/li&gt;
&lt;li&gt;易测试性「能够为系统、产品或组件建立测试准则，并通过测试执行来确定测试准则是否被满足的有效性和有效率的程度」&lt;/li&gt;
&lt;li&gt;维护性的依从性「产品或系统遵循与维护性相关的标准、约定或法规以及类似规定的程度」&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;可移植性「软件能够从一种软硬件或者其它运行环境迁移到另一种环境的有效性和效率程度」

&lt;ul&gt;
&lt;li&gt;适应性「软件能够有效及有效率地适应不同的或演变的软硬件或其他运行环境的程度」&lt;/li&gt;
&lt;li&gt;易安装性「在指定环境中，产品能够成功地安装、卸载的有效性和效率的程度」&lt;/li&gt;
&lt;li&gt;易替换性「在相同环境中，产品能够替换另一个相同用途的指定软件产品或该产品旧版本的程度」&lt;/li&gt;
&lt;li&gt;可移植性的依从性「产品和系统遵循与可移植性相关的标准、约定或法规以及类似规定的程度」&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&#34;软件质量模型的作用&#34;&gt;软件质量模型的作用&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;确定质量需求&lt;/li&gt;
&lt;li&gt;建立质量测度&lt;/li&gt;
&lt;li&gt;执行质量评价&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;三-软件质量保障&#34;&gt;三、软件质量保障&lt;/h3&gt;

&lt;p&gt;如果说软件质量是终端用户满意度的提现，
那么软件质量保障工作的终极目标就是 &lt;strong&gt;确保终端用户的满意度&lt;/strong&gt;。&lt;/p&gt;

&lt;h3 id=&#34;四-软件质量保障体系-个人思考&#34;&gt;四、软件质量保障体系（个人思考）&lt;/h3&gt;

&lt;p&gt;为了让软件质量保障工作得以系统化地开展（系统化的好处：能保证最终结果的可靠性），我们需要建立软件质量保障体系。&lt;br /&gt;
&lt;strong&gt;它需要解决软件质量保障工作做什么，如何做，以及如何评估和优化的问题。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;软件质量保障工作的着手点：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;从质量类型上划分：产研质量控制及其数据收集、运营质量监控及其数据收集&lt;/li&gt;
&lt;li&gt;从执行上划分：人、过程、工具、数据&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;软件质量保障工作如何开展？&lt;br /&gt;
想要开展好软件质量保障工作，我们需要针对每个着手点开展一系列的工作，做到多管齐下，方能收到最大的成效。&lt;/p&gt;

&lt;p&gt;从人的角度来看，参与到质量保障的工作中的角色不应该仅仅只有测试人员，更需要产品人员、开发人员、运维人员，甚至是老板的一起参与，因为只有大家都认真地重视质量，质量才能不断地提高。因此，在质量保障的工作中每个角色都需要关注质量，也许他们仅需要重点关注其中的某一部分，例如：产品人员需要做的是从设计层面确保产品质量的功能性、易用性，使所设计的功能与用户预期一致；开发人员需要从实现层面确保产品质量的功能性、维护性，但这并不意味着他们就不需要关注其他质量特性了。
测试人员是质量保障工作的主导者，负责对产品质量的所有特性及子特性进行验证和确认工作，并进行软件质量的评估与反馈，以及软件缺陷的预防。除此之外，测试人员还需要建立有效的线上监控和报警机制，做到质量问题的及早发现。
运维人员并不需要特别关注软件质量，但他们需要确保软件运行环境的稳定，以及协助测试人员做好线上问题监控。&lt;/p&gt;

&lt;p&gt;从过程的角度来看，软件质量保障工作需要渗入到产品研发流程的每一个阶段。在需求阶段我们应该建立更加严格的需求评审，进行更加详细的需求分析，以及更加完善的需求准出机制；在开发阶段需要开展技术评审、开发自测、代码 review、代码扫描等工作，以及完善的代码准出机制；由于软件测试是质量保障的主要手段，测试阶段不应该是开发阶段完成后的一个独立阶段，它应该贯穿于整个软件生命周期，做到持续不断地测试。&lt;/p&gt;

&lt;p&gt;从数据的角度来看，我们需要收集软件生命周期中的一些必要数据，以对软件质量进行有效评估和改进。包括需求阶段发现的问题数，开发未自测问题数，各时间段发现的缺陷的数量，线上用户反馈的问题数，以及新功能的用户使用率和留存率等等。&lt;/p&gt;

&lt;p&gt;监控的目的是为了在线上及早地发现和及早地解决质量保障过程中的漏网之鱼，以降低质量问题最终影响到的用户数量。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>浏览器工作过程</title>
      <link>/2019/06/09/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%B7%A5%E4%BD%9C%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Sun, 09 Jun 2019 19:01:55 +0800</pubDate>
      
      <guid>/2019/06/09/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%B7%A5%E4%BD%9C%E8%BF%87%E7%A8%8B/</guid>
      
        <description>

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;相似问题&lt;/strong&gt;：&lt;br /&gt;
&lt;em&gt;打开一个网址会发生什么？&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;浏览器是怎样工作的？&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;简述一次完整的 HTTP 请求过程&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;First Of All：在浏览器地址栏输入 URL 并回车&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;dns-域名解析&#34;&gt;DNS 域名解析&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;搜索浏览器自身缓存的 DNS 记录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;浏览器自身也带有一层 DNS 缓存。Chrome 缓存 1000 条 DNS 解析结果，缓存时间大概在一分钟左右。
（Chrome 浏览器通过输入：chrome://net-internals/#dns 打开 DNS 缓存页面）&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;搜索操作系统缓存和 hosts 文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;发生在浏览器缓存中没有找到需要的记录或记录已经过期的时候。
在 Windows 操作系统中，可以通过 `ipconfig /displaydns` 命令查看本机当前的缓存。
通过 hosts 文件，你可以手动指定一个域名和其对应的 IP 解析结果，并且该结果一旦被使用，同样会被缓存到操作系统缓存中。
Windows 系统的 hosts 文件在 `%systemroot%\system32\drivers\etc` 下，linux 系统的 hosts 文件在 `/etc/hosts` 下。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;向域名解析服务器发送解析请求&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;发生在 hosts 文件和操作系统缓存中没有找到需要的记录或记录已经过期。
第一台被访问的域名解析服务器就是我们平时在设置中填写的 DNS 服务器一项。
一般一台域名解析服务器会被地理位置临近的大量用户使用（特别是 ISP 的 DNS），一般常见的网站域名解析都能在这里命中。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;递归+迭代解析 DNS&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;发生在域名解析服务器也没有该域名的记录时。
从根域服务器（IPv4 只有 13 台）-&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;得到 IP 地址，返回给浏览器&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;浏览器缓存 -&amp;gt; 浏览器
host 文件/本地缓存 -&amp;gt; 浏览器
域名解析服务器 -&amp;gt; 浏览器
（xxx.xxx 域服务器 -&amp;gt; .xxx 域服务器 -&amp;gt; 根域服务器）&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;tcp-连接&#34;&gt;TCP 连接&lt;/h3&gt;

&lt;h3 id=&#34;发起-http-请求&#34;&gt;发起 HTTP 请求&lt;/h3&gt;

&lt;h3 id=&#34;服务器处理请求&#34;&gt;服务器处理请求&lt;/h3&gt;

&lt;h3 id=&#34;服务器响应请求&#34;&gt;服务器响应请求&lt;/h3&gt;

&lt;h3 id=&#34;浏览器解析渲染&#34;&gt;浏览器解析渲染&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;参考来源&lt;/strong&gt;：&lt;br /&gt;
&lt;a href=&#34;http://taligarsiel.com/Projects/howbrowserswork1.html&#34;&gt;http://taligarsiel.com/Projects/howbrowserswork1.html&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://www.cnblogs.com/dengzz/p/5544122.html&#34;&gt;https://www.cnblogs.com/dengzz/p/5544122.html&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://juejin.im/post/5b148a2ce51d4506965908d2&#34;&gt;https://juejin.im/post/5b148a2ce51d4506965908d2&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>测试点归纳-接口功能</title>
      <link>/2019/05/24/%E6%B5%8B%E8%AF%95%E7%82%B9%E5%BD%92%E7%BA%B3-%E6%8E%A5%E5%8F%A3%E5%8A%9F%E8%83%BD/</link>
      <pubDate>Fri, 24 May 2019 13:13:07 +0800</pubDate>
      
      <guid>/2019/05/24/%E6%B5%8B%E8%AF%95%E7%82%B9%E5%BD%92%E7%BA%B3-%E6%8E%A5%E5%8F%A3%E5%8A%9F%E8%83%BD/</guid>
      
        <description>

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;总结归纳是积累经验获得成长最有效的方式&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;单接口测试&#34;&gt;单接口测试：&lt;/h2&gt;

&lt;h3 id=&#34;正常流程&#34;&gt;正常流程&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;验证响应码和响应报文格式正确&lt;/strong&gt;&lt;br /&gt;
需考虑各种正确的传参组合，包括请求参数的长度、类型、值、以及请求报文格式；&lt;br /&gt;
需考虑非必填项填与不填的情况。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;验证响应数据正确&lt;/strong&gt;&lt;br /&gt;
需验证响应数据的值和预期一致；&lt;br /&gt;
需验证响应数据在默认情况下的数量正确。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;异常流程-优先级从高到低&#34;&gt;异常流程（优先级从高到低）&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;传参数据错误测试&lt;/strong&gt;&lt;br /&gt;
需要考虑传递单一非法参数的情况；&lt;br /&gt;
需要考虑传递非法参数组合的情况。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传参类型错误测试&lt;/strong&gt;&lt;br /&gt;
需要考虑必填请求参数值为空的情况；&lt;br /&gt;
需要考虑必填/非必填请求参数数值类型错误的情况。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传参结构错误测试&lt;/strong&gt;&lt;br /&gt;
需要考虑请求报文格式错误的情况；&lt;br /&gt;
需要考虑必填请求参数缺失的情况。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;异步接口测试&#34;&gt;异步接口测试：&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;接口幂等&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;出错重试&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;接口组合测试&#34;&gt;接口组合测试：&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;业务主流程接口组合测试&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;业务支线流程接口组合测试&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;参考来源：&lt;br /&gt;
编程猫创作工具组测试内部研讨&lt;br /&gt;
小赢信贷测试实践&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>养猫前准备</title>
      <link>/2019/04/14/%E5%85%BB%E7%8C%AB%E5%89%8D%E5%87%86%E5%A4%87/</link>
      <pubDate>Sun, 14 Apr 2019 19:14:59 +0800</pubDate>
      
      <guid>/2019/04/14/%E5%85%BB%E7%8C%AB%E5%89%8D%E5%87%86%E5%A4%87/</guid>
      
        <description>

&lt;h2 id=&#34;猫粮&#34;&gt;猫粮&lt;/h2&gt;

&lt;p&gt;幼猫粮（1~12 个月）：&lt;a href=&#34;https://item.epet.com/161808.html&#34;&gt;K9 膳食调理大师&lt;/a&gt;
全猫粮（年龄不限）：&lt;a href=&#34;https://item.epetht.com/10119283.html&#34;&gt;天衡宝 Natural Balance 健乐系列&lt;/a&gt;
营养膏（必备）：&lt;a href=&#34;https://item.epet.com/147097.html&#34;&gt;红狗 RedDog 猫用营养膏&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;猫窝&#34;&gt;猫窝&lt;/h2&gt;

&lt;p&gt;猫吊床：&lt;a href=&#34;https://detail.tmall.com/item.htm?id=553411580469&amp;amp;spm=a1z09.2.0.0.4f0a2e8dWdxFbT&amp;amp;_u=evfn3b3002b&amp;amp;skuId=4188426319897&#34;&gt;挂式猫吊床&lt;/a&gt;
猫窝：&lt;a href=&#34;https://detail.tmall.com/item.htm?id=571984086907&amp;amp;spm=a1z09.2.0.0.4f0a2e8dWdxFbT&amp;amp;_u=evfn3b30cec&amp;amp;skuId=3964530043983&#34;&gt;碗形猫抓板猫窝&lt;/a&gt;
喂食器：&lt;a href=&#34;https://item.jd.com/5431196.html#crumb-wrap&#34;&gt;憨憨乐园 喂食器 3.8L&lt;/a&gt;
饮水机：&lt;a href=&#34;https://item.jd.com/100000251570.html&#34;&gt;小佩饮水机&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;猫厕所&#34;&gt;猫厕所&lt;/h2&gt;

&lt;p&gt;猫砂盆：&lt;a href=&#34;https://item.jd.com/10191329272.html&#34;&gt;爱丽丝猫砂盆&lt;/a&gt;
猫砂：&lt;a href=&#34;https://detail.tmall.com/item.htm?id=527264059679&amp;amp;spm=a1z09.2.0.0.4f0a2e8dWdxFbT&amp;amp;_u=evfn3b3c34c&amp;amp;skuId=4069213157761&#34;&gt;怡亲绿茶豆腐猫砂&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;猫玩具&#34;&gt;猫玩具&lt;/h2&gt;

&lt;p&gt;激光灯：&lt;a href=&#34;https://item.jd.com/4359029.html#none&#34;&gt;魔铁 MY-01&lt;/a&gt;
帆布球：&lt;a href=&#34;https://item.jd.com/3213588.html&#34;&gt;田田猫 帆布球&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;偷窥狂魔&#34;&gt;偷窥狂魔&lt;/h2&gt;

&lt;p&gt;摄像头：&lt;a href=&#34;https://item.jd.com/7651925.html&#34;&gt;米家智能摄像机 云台版&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfnew194fhj20ch05zgmz.jpg&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;平价养猫，且养且珍惜 [捂脸哭]&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>Python 面向对象</title>
      <link>/2019/03/23/python-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Sat, 23 Mar 2019 12:19:10 +0800</pubDate>
      
      <guid>/2019/03/23/python-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</guid>
      
        <description>

&lt;h3 id=&#34;封装&#34;&gt;封装&lt;/h3&gt;

&lt;h4 id=&#34;访问限制&#34;&gt;访问限制&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Python 对属性权限的控制是通过属性名来实现的，如果一个属性由双下划线开头 ==&lt;code&gt;__&lt;/code&gt;==，该属性就无法被外部访问。&lt;/li&gt;
&lt;li&gt;但是，如果一个属性以 &lt;code&gt;__xxx__&lt;/code&gt; 的形式定义，那它又可以被外部访问了，以 &lt;code&gt;__xxx__&lt;/code&gt; 定义的属性在 Python 的类中被称为特殊属性，并且通常我们不应该把普通属性用 &lt;code&gt;__xxx__&lt;/code&gt; 定义。&lt;/li&gt;
&lt;li&gt;以单下划线 ==&lt;code&gt;_&lt;/code&gt;== 开头的属性 &lt;code&gt;_xxx&lt;/code&gt; 虽然也可以被外部访问，但是按照约定，他们不应该被外部访问。另外该属性不能被子类继承，也不会被 &lt;code&gt;from module import *&lt;/code&gt; 导入&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;关于 Python 中下划线用法的总结可参考&lt;br /&gt;
&lt;a href=&#34;https://dbader.org/blog/meaning-of-underscores-in-python&#34;&gt;https://dbader.org/blog/meaning-of-underscores-in-python&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;继承&#34;&gt;继承&lt;/h3&gt;

&lt;h4 id=&#34;定义新的-student-类继承已定义的-person-类&#34;&gt;定义新的 Student 类继承已定义的 Person 类&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;一定要用 &lt;code&gt;super(Student, self).__init__(name, gender)&lt;/code&gt; 去初始化父类，否则，继承自 &lt;code&gt;Person&lt;/code&gt; 的 &lt;code&gt;Student&lt;/code&gt; 将没有 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;gender&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;函数 &lt;code&gt;super(Student, self)&lt;/code&gt; 将返回当前类继承的父类，即 &lt;code&gt;Person&lt;/code&gt;，然后调用 &lt;code&gt;__init__()&lt;/code&gt; 方法，注意 &lt;code&gt;self&lt;/code&gt; 参数已在 &lt;code&gt;super()&lt;/code&gt;中 传入，在 &lt;code&gt;__init__()&lt;/code&gt; 中将隐式传递，不需要写出（也不能写）&lt;/li&gt;

&lt;li&gt;&lt;p&gt;初始化父类的属性后，只需要再把子类额外的属性加上&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Person 类&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;
    &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gender&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gender&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 继承 Person 的 Student 类&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Student&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;score&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Student&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;score&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;score&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;多重继承&#34;&gt;多重继承&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;D 同时继承自 B 和 C，也就是 D 拥有了 A、B、C 的全部功能。多重继承通过 &lt;code&gt;super()&lt;/code&gt; 调用 &lt;code&gt;__init__()&lt;/code&gt; 方法时，A 虽然被继承了两次，但 &lt;code&gt;__init__()&lt;/code&gt; 只调用一次。&lt;/li&gt;

&lt;li&gt;&lt;p&gt;多重继承的目的是从两种继承树中分别选择并继承出子类，以便组合功能使用。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph BT
subgraph 菱形继承
    B --&amp;gt; |继承| A
    C --&amp;gt; |继承| A
    D --&amp;gt; |继承| B
    D --&amp;gt; |继承| C
end&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;init A...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;end A...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;init B...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;end B...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;init C...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;end C...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;init D...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;end D...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 调用结果&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;init&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;init&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;init&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;init&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;可以看出 Python 中从 Object 继承来的类，会采用&lt;strong&gt;广度优先&lt;/strong&gt;搜索的方式来进行继承。&lt;/p&gt;

&lt;h3 id=&#34;多态&#34;&gt;多态&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;同一类事物在运行过程中表现出不同的状态&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;多态的两个条件：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;继承&lt;/li&gt;
&lt;li&gt;重写&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Python 作为一种动态语言，崇尚鸭子类型&lt;a href=&#34;https://baike.baidu.com/item/鸭子类型&#34;&gt;鸭子类型&lt;/a&gt;，参数在传入之前无法确定也不需要声明参数类型，可以像多态一样工作但无需继承，并支持实现多态性。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Robot Framework 学习资源汇总</title>
      <link>/2019/02/22/robot-framework-%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90%E6%B1%87%E6%80%BB/</link>
      <pubDate>Fri, 22 Feb 2019 19:12:04 +0800</pubDate>
      
      <guid>/2019/02/22/robot-framework-%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90%E6%B1%87%E6%80%BB/</guid>
      
        <description>

&lt;h3 id=&#34;学习网站&#34;&gt;学习网站&lt;/h3&gt;

&lt;p&gt;官网：&lt;a href=&#34;http://robotframework.org/&#34;&gt;http://robotframework.org/&lt;/a&gt;&lt;br /&gt;
简书专栏：&lt;a href=&#34;https://www.jianshu.com/c/483e8ffcbc79&#34;&gt;https://www.jianshu.com/c/483e8ffcbc79&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;用户手册&#34;&gt;用户手册&lt;/h3&gt;

&lt;p&gt;_原版_：&lt;a href=&#34;http://robotframework.org/robotframework/&#34;&gt;http://robotframework.org/robotframework/&lt;/a&gt;&lt;br /&gt;
_中文版_：&lt;a href=&#34;https://robotframework-userguide-cn.readthedocs.io/zh_CN/latest/&#34;&gt;http://robotframework.org/robotframework/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;学习视屏&#34;&gt;学习视屏&lt;/h3&gt;

&lt;p&gt;_RF 入门_：&lt;a href=&#34;http://study.163.com/course/courseMain.htm?courseId=1004056051&#34;&gt;http://study.163.com/course/courseMain.htm?courseId=1004056051&lt;/a&gt;&lt;br /&gt;
_元素定位_：&lt;a href=&#34;https://www.imooc.com/learn/950&#34;&gt;https://www.imooc.com/learn/950&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;github&#34;&gt;Github&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/robotframework&#34;&gt;https://github.com/robotframework&lt;/a&gt;&lt;br /&gt;
_精选资源_：&lt;a href=&#34;https://github.com/fkromer/awesome-robotframework&#34;&gt;https://github.com/robotframework&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;效能提升&#34;&gt;效能提升&lt;/h3&gt;

&lt;p&gt;_并发执行_：
&lt;a href=&#34;https://github.com/mkorpela/pabot&#34;&gt;https://github.com/mkorpela/pabot&lt;/a&gt;&lt;br /&gt;
_RF 调试_：
&lt;a href=&#34;https://github.com/xyb/robotframework-debuglibrary&#34;&gt;https://github.com/xyb/robotframework-debuglibrary&lt;/a&gt;&lt;br /&gt;
_VS Code 插件（依赖 VS Code）_：
&lt;a href=&#34;https://github.com/tomi/vscode-rf-language-server&#34;&gt;https://github.com/xyb/robotframework-debuglibrary&lt;/a&gt; &lt;strong&gt;推荐&lt;/strong&gt;&lt;br /&gt;
_Sublime 插件（依赖 Sublime Text3）_：
&lt;a href=&#34;https://github.com/andriyko/sublime-robot-framework-assistant&#34;&gt;https://github.com/andriyko/sublime-robot-framework-assistant&lt;/a&gt;&lt;br /&gt;
_RED 编辑器（依赖 eclipse）_：
&lt;a href=&#34;https://github.com/nokia/RED&#34;&gt;https://github.com/andriyko/sublime-robot-framework-assistant&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Robot Framework 安装配置</title>
      <link>/2019/02/19/robot-framework-%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Tue, 19 Feb 2019 00:27:04 +0800</pubDate>
      
      <guid>/2019/02/19/robot-framework-%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</guid>
      
        <description>

&lt;p&gt;&lt;em&gt;RF 是最强的自动化测试框架，没有之一！&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Robot Framework 最新基于 Windows+Python3 的安装方式，是时候卸载掉 Python2 了！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;robot-framework-介绍&#34;&gt;Robot Framework 介绍&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Robot Framework 是一款基于 Python 的功能自动化测试框架。它具备良好的可扩展性，支持关键字驱动，可以同时测试多种类型的客户端或者接口，可以进行分布式测试执行。主要用于轮次很多的验收测试和验收测试驱动开发（ATDD）。在我们进行全球化测试的时候可以用此框架来编写一些脚本任务，如定时下载 daily build , 配合 Selenium 完成自动化截图等，来方便我们的测试。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;以下使用 &amp;lt;python_path&amp;gt; 代指 python 的本地安装路径&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;robot-framework-的安装和配置&#34;&gt;Robot Framework 的安装和配置&lt;/h2&gt;

&lt;h3 id=&#34;一-安装-python&#34;&gt;一、安装 Python&lt;/h3&gt;

&lt;p&gt;Python 建议安装 3.6 及以上版本，Windows 端注意要将 &lt;code&gt;&amp;lt;python_path&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;python_path&amp;gt;\Scripts&lt;/code&gt; 加入环境变量；Mac 端建议&lt;a href=&#34;https://www.baidu.com/s?ie=utf-8&amp;amp;f=8&amp;amp;rsv_bp=1&amp;amp;tn=baidu&amp;amp;wd=%E4%BD%BF%E7%94%A8%20brew%20%E5%AE%89%E8%A3%85%20Python&amp;amp;oq=brew%25E5%25AE%2589%25E8%25A3%2585python&amp;amp;rsv_pq=8d4db15d00059a50&amp;amp;rsv_t=5c05WE34UHzDid5UVd7%2BBJWL%2FYI9X%2FimL17iCKjjZmNoOutHI%2FNSt0CiT7M&amp;amp;rqlang=cn&amp;amp;rsv_enter=1&amp;amp;inputT=785&amp;amp;rsv_sug3=44&amp;amp;rsv_sug1=27&amp;amp;rsv_sug7=100&amp;amp;rsv_sug2=0&amp;amp;rsv_sug4=1445&#34;&gt;使用 brew 安装 Python&lt;/a&gt;，即可不用考虑环境变量问题。&lt;/p&gt;

&lt;h3 id=&#34;二-安装-robotframework-及其所需要的第三方库&#34;&gt;二、安装 RobotFramework 及其所需要的第三方库&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;RF 安装及运行所依赖的第三方库均可通过 Python 的包管理器 pip 进行安装。&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装 Robot Framework：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ pip3 install robotframework&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装 wxPython：（不安装则无法运行 RIDE 编辑器）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ pip3 install wxpython&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装 RIDE 编辑器：&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Windows 端可直接使用 pip 安装：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ pip3 install robotframework-ride&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Mac 端目前需要使用 easy_install 进行安装：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ pip3 install -U -r https://raw.githubusercontent.com/robotframework/RIDE/master/requirements.txt
$ git clone https://github.com/robotframework/RIDE.git
$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; RIDE
$ python3 setup.py build
$ python3 setup.py install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;其它常用第三方库：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ pip3 install robotframework-seleniumlibrary  &lt;span class=&#34;c1&#34;&gt;# 用于进行 Web 自动化测试&lt;/span&gt;
$ pip3 install robotframework-appiumlibrary  &lt;span class=&#34;c1&#34;&gt;# 用于进行 app 自动化测试&lt;/span&gt;
$ pip3 install robotframework-requests  &lt;span class=&#34;c1&#34;&gt;# 用于进行接口自动化测试&lt;/span&gt;
$ pip3 install robotframework-autoitlibrary  &lt;span class=&#34;c1&#34;&gt;# 用于进行 Windows GUI 自动化测试（专用于 Windows 系统，安装时需要管理员权限）&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;三-robot-framework-ide-ride-编辑器的基本使用&#34;&gt;三、Robot Framework IDE (RIDE) 编辑器的基本使用&lt;/h3&gt;

&lt;p&gt;RIDE 是官方开发并推荐使用的 RF 测试用例开发环境，完成 RobotFramework 的安装后，Windows 端在命令行中运行 &lt;code&gt;$ python &amp;lt;python_path&amp;gt;\Scripts\ride.py&lt;/code&gt;，Mac 端直接输入 &lt;code&gt;$ ride.py&lt;/code&gt; 即可打开 RIDE 编辑器，如图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfno1dzv97j20u60jagnc.jpg&#34; alt=&#34;RIDE 编辑器启动界面&#34; /&gt;&lt;/p&gt;

&lt;p&gt;打开 顶部菜单栏 &amp;gt;&amp;gt; Tools，单击 Create RIDE Desktop Shortcut 则可在桌面创建 RIDE 快捷方式，下次即可直接双击快捷方式打开 RIDE 编辑器。
&lt;em&gt;注意：快捷方式仅支持 Windows 端，Mac 端目前暂不支持。&lt;/em&gt;
&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfno1yzs1uj20f00ak75m.jpg&#34; alt=&#34;创建快捷方式&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建测试项目 Project
打开 菜单栏 &amp;gt;&amp;gt; File &amp;gt;&amp;gt; New Project，在弹出的弹窗中输入项目名称，选择 Directory 类型，点击 OK 确认创建；
&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfno2daycfj20sb0723zd.jpg&#34; alt=&#34;创建测试项目&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;创建测试套件 Suite
右键单击刚创建的测试项目，选择 New Suite，输入套件名称 , 选择 File 类型，点击 OK 确认创建；
&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfno40ruxmj20sc078aaw.jpg&#34; alt=&#34;创建测试套件&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;创建测试用例 Case
右键单击刚创建的测试套件，选择 New Test Case，输入用例名称，点击 OK 确认创建；
&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfno4ewzyej20sc05s74s.jpg&#34; alt=&#34;创建测试用例&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;导入 RF 的第三方库（以 SeleniumLibrary 库为例）
选择刚创建的测试套件，点击最右侧 Library 按钮，在弹出的弹窗中输入库名称，其余可不填，点击 OK 确认导入；
&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfno4unrfpj20tv0c7gmy.jpg&#34; alt=&#34;导入 SeleniumLibrary 库&#34; /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;导入后如果导入的库显示为红色，表示导入的库不存在（检查是否已安装相关的库，拼写是否正确，仍不行的话重启下 RIDE），如果是黑色则表示导入成功；
&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfno5flnboj20dy05jq2y.jpg&#34; alt=&#34;导入成功&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;编写测试脚本：（需要安装过 Chrome 和 对应版本的 chromedriver）
选择刚创建的测试用例，在 Edit 页的表格中输入脚本；
&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfno665fd3j20qi06u0t5.jpg&#34; alt=&#34;编写测试脚本&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;执行测试：
勾选测试用例，点击运行按钮执行测试；（会正常打开 chrome 并跳转到简书作者首页）
&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfno6xdbpfj20qo06sdgb.jpg&#34; alt=&#34;执行测试用例&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;查看测试报告：
&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfno7ymgzjj20pt0h0taa.jpg&#34; alt=&#34;查看测试报告&#34; /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;参考来源：&lt;br /&gt;
&lt;a href=&#34;https://github.com/robotframework/RIDE/releases&#34;&gt;https://github.com/robotframework/RIDE/releases&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://www.ibm.com/developerworks/cn/opensource/os-cn-robot-framework/index.html&#34;&gt;https://www.ibm.com/developerworks/cn/opensource/os-cn-robot-framework/index.html&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://github.com/robotframework/SeleniumLibrary&#34;&gt;https://github.com/robotframework/SeleniumLibrary&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://github.com/serhatbolsu/robotframework-appiumlibrary&#34;&gt;https://github.com/serhatbolsu/robotframework-appiumlibrary&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://github.com/nokia/robotframework-autoitlibrary&#34;&gt;https://github.com/nokia/robotframework-autoitlibrary&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>Windows 下通过 cmder 远程连接 Linux 服务器</title>
      <link>/2018/12/31/windows-%E4%B8%8B%E9%80%9A%E8%BF%87-cmder-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5-linux-%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Mon, 31 Dec 2018 01:16:23 +0800</pubDate>
      
      <guid>/2018/12/31/windows-%E4%B8%8B%E9%80%9A%E8%BF%87-cmder-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5-linux-%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      
        <description>

&lt;blockquote&gt;
&lt;p&gt;阅读引导&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;需要先在 Windows 系统中安装 &lt;a href=&#34;http://cmder.net/&#34;&gt;cmder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;文中用 &amp;ldquo;&lt;xxx&gt;&amp;rdquo; 表示的字符均需替换为自己机器中真实的名称（注意去掉 &amp;lt;&amp;gt;）&lt;/li&gt;
&lt;li&gt;以 &amp;ldquo;\$ &amp;ldquo; 开头的命令代表需要在命令行工具中输入，输入时不需要带上 &amp;ldquo;\$ &amp;ldquo; 字符。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;前言&#34;&gt;前言&lt;/h3&gt;

&lt;p&gt;SSH 为  &lt;a href=&#34;https://baike.baidu.com/item/Secure%20Shell&#34;&gt;Secure Shell&lt;/a&gt;  的缩写，由 IETF 的网络小组（Network Working Group）所制定；SSH 为建立在应用层基础上的安全协议。SSH 是目前较可靠，专为&lt;a href=&#34;https://baike.baidu.com/item/%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/1071998&#34;&gt;远程登录&lt;/a&gt;会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。&lt;/p&gt;

&lt;p&gt;SSH 目前提供两种级别的安全验证&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;基于口令的安全验证&lt;/li&gt;
&lt;li&gt;基于秘钥的安全认证（不需要在网络上传输口令，相对来说更加安全）&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;方式一-通过-ssh-口令方式连接&#34;&gt;方式一：通过 SSH 口令方式连接&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;打开 cmder&lt;/li&gt;

&lt;li&gt;&lt;p&gt;输入以下命令按回车确认&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ ssh &amp;lt;username&amp;gt;@&amp;lt;server-ip-address&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;根据给出的提示输入用户密码，按回车确认&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;登录成功&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;方式二-通过-ssh-密钥方式连接-实现无密码登录&#34;&gt;方式二：通过 SSH 密钥方式连接（实现无密码登录）&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;请先检查本机目录 &lt;code&gt;C:\Users\&amp;lt;用户名&amp;gt;\.ssh&lt;/code&gt; 下是否有 &lt;code&gt;id_rsa&lt;/code&gt; 和 &lt;code&gt;id_rsa.pub&lt;/code&gt; 两个文件，如果有直接上传公钥 &lt;code&gt;id_rsa.pub&lt;/code&gt; 到 Linux 服务器（步骤 2）即可，无需再生成密钥对&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在本机生成 SSH 密钥对
1.1 打开 cmder
1.2 输入以下命令按回车确认&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ ssh-keygen -t rsa&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;1.3 弹出密钥保存位置提示后，继续按回车（密钥对将生成到默认位置 &lt;code&gt;C:\Users\&amp;lt;用户名&amp;gt;\.ssh\&lt;/code&gt;）
1.4 弹出输入密码提示后，继续按回车（此时不设置密钥对验证密码）
1.5 弹出确认密码提示后，继续按回车
1.6 检查本机目录 &lt;code&gt;C:\Users\&amp;lt;用户名&amp;gt;\.ssh\&lt;/code&gt; 下存在 &lt;code&gt;id_rsa&lt;/code&gt; 和 &lt;code&gt;id_rsa.pub&lt;/code&gt; 两个文件
1.7 密钥对生成完毕&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;上传公钥到 Linux 服务器
2.1 通过方式一连接到 Linux 服务器
2.2 在远程服务器上输入以下命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ mkdir ~/.ssh &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; touch ~/.ssh/authorized_keys
$ chmod &lt;span class=&#34;m&#34;&gt;700&lt;/span&gt; ~/.ssh &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; chmod &lt;span class=&#34;m&#34;&gt;600&lt;/span&gt; ~/.ssh/authorized_keys&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.3 在本机输入命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ scp C:&lt;span class=&#34;se&#34;&gt;\U&lt;/span&gt;sers&lt;span class=&#34;se&#34;&gt;\&amp;lt;&lt;/span&gt;用户名&amp;gt;&lt;span class=&#34;se&#34;&gt;\.&lt;/span&gt;ssh&lt;span class=&#34;se&#34;&gt;\i&lt;/span&gt;d_rsa.pub &amp;lt;username&amp;gt;@&amp;lt;server-ip-address&amp;gt;:~/.ssh/authorized_keys&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.4 输入密码后，按回车确认
2.5 上传成功后输入以下命令即可成功连接服务器&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ ssh &amp;lt;username&amp;gt;@&amp;lt;server-ip-address&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.6 配置 &lt;code&gt;config&lt;/code&gt; 文件简化登录输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ vim C:&lt;span class=&#34;se&#34;&gt;\U&lt;/span&gt;sers&lt;span class=&#34;se&#34;&gt;\&amp;lt;&lt;/span&gt;用户名&amp;gt;&lt;span class=&#34;se&#34;&gt;\.&lt;/span&gt;ssh&lt;span class=&#34;se&#34;&gt;\c&lt;/span&gt;onfig&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输入以下内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span class=&#34;nx&#34;&gt;Host&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;you&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;want&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;HostName&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;PubkeyAuthentication&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;yes&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;config&lt;/code&gt; 文件创建好后，直接输入以下命令登录服务器&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ ssh &amp;lt;name-you-want&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;附-另外附上-cmder-的一些初始化配置&#34;&gt;附：另外附上 cmder 的一些初始化配置&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;##### 添加至环境变量&lt;/span&gt;
将 cmder.exe 存放的目录添加到系统环境变量 Path &amp;lt;br&amp;gt;
Win+R 打开运行，输入 cmder 按回车打开 cmder &amp;lt;br&amp;gt;

&lt;span class=&#34;c1&#34;&gt;##### 添加至右键菜单（需要运行管理员权限）&lt;/span&gt;
以管理员身份运行 cmd 输入命令：&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;Cmder.exe /REGISTER ALL&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;##### 解决中文显示乱码问题&lt;/span&gt;
Settings --&amp;gt; Startup --&amp;gt; Environment 添加
&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;LANG&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;zh_CN.UTF-8&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;##### 修改默认的命令提示符λ改成$&lt;/span&gt;
将 &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;cmder&lt;span class=&#34;se&#34;&gt;\v&lt;/span&gt;endor&lt;span class=&#34;se&#34;&gt;\c&lt;/span&gt;link.lua&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt; 文件中第42行中 &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;λ&amp;#34;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt; 修改为 &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;$&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt; &amp;lt;br&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;参考来源：&lt;br /&gt;
&lt;a href=&#34;https://github.com/cmderdev/cmder/blob/master/README.md&#34;&gt;https://github.com/cmderdev/cmder/blob/master/README.md&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://www.linode.com/docs/security/authentication/use-public-key-authentication-with-ssh/&#34;&gt;https://www.linode.com/docs/security/authentication/use-public-key-authentication-with-ssh/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>Python 字符串格式化总结</title>
      <link>/2018/10/06/python-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sat, 06 Oct 2018 16:14:18 +0800</pubDate>
      
      <guid>/2018/10/06/python-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%80%BB%E7%BB%93/</guid>
      
        <description>

&lt;blockquote&gt;
&lt;p&gt;推荐使用 f-Strings&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;字符串格式化之一-formatting-和-string-template&#34;&gt;字符串格式化之一：&lt;code&gt;%-formatting&lt;/code&gt; 和 &lt;code&gt;string.Template&lt;/code&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;转化说明符表达式：&lt;code&gt;%[转换标记][宽度[.精确度]]转换类型&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;转换标记&lt;/th&gt;
&lt;th&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;表示左对齐&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;在正数前面显示加号 (+)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;定义宽度或者小数点精度&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;在八进制数前面显示零 (&amp;lsquo;0&amp;rsquo;)，在十六进制前面显示 &amp;lsquo;0x&amp;rsquo; 或者 &amp;lsquo;0X&amp;rsquo;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;%&lt;/td&gt;
&lt;td&gt;输出一个单一的 &amp;lsquo;%&amp;rsquo;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;显示的数字前面填充 &amp;lsquo;0&amp;rsquo; 而不是默认的空格&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;sp&gt;&lt;/td&gt;
&lt;td&gt;在正数前面显示空格&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;(var)&lt;/td&gt;
&lt;td&gt;映射变量(字典参数)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;转换类型&lt;/th&gt;
&lt;th&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;c&lt;/td&gt;
&lt;td&gt;转换为单个字符，对于数字将转换为该值所对应的 ASCII 码&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;转换为字符串，对于非字符串，将默认调用 str() 函数进行转换&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt;用 repr() 函数进行字符串转换&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;i d&lt;/td&gt;
&lt;td&gt;转换为带符号的十进制数&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;u&lt;/td&gt;
&lt;td&gt;转换为不带符号的十进制数&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;o&lt;/td&gt;
&lt;td&gt;转换为不带符号的八进制数&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;x X&lt;/td&gt;
&lt;td&gt;转换为不带符号十六进制数&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;e E&lt;/td&gt;
&lt;td&gt;转换为科学计数法表示的浮点数&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;f F&lt;/td&gt;
&lt;td&gt;转换为浮点数（小数部分自然截断）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;常见用法&#34;&gt;常见用法：&lt;/h3&gt;

&lt;h4 id=&#34;直接格式化字符或者数值&#34;&gt;直接格式化字符或者数值&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Your height is &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%.2f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; m&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.72&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;your&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;height&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.72&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;以元组的形式格式化&#34;&gt;以元组的形式格式化&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;itemtuple&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;panfeng&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.72&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Name:&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%-13s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; Age:&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%-8d&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; Height:&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%-3.2f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;itemtuple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;panfeng&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;Age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;Height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.72&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;以字典的形式格式化&#34;&gt;以字典的形式格式化&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;itemdic&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;panfeng&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;age&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;height&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.72&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Name:&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%(name)-13s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; Age:&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%(age)-8d&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; Height:&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%(height)-3.2f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;itemdic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;panfeng&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;Age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;Height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.72&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;string-template&#34;&gt;string.Template&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;string&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;st&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Template&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Name:$name   Age:$age   Height:$height&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;itemdict&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;panfeng&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;age&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;height&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.72&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;st&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;substitute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;itemdict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;&amp;#39;Name:panfeng   Age:24   Height:1.72&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;字符串格式化之二-str-format&#34;&gt;字符串格式化之二：&lt;code&gt;str.format()&lt;/code&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;表达式：&lt;code&gt;&amp;quot;{[replacement_field]}&amp;quot;.format()&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;# 替换字段的语法如下：
replacement_field  ::=  &amp;#34;{&amp;#34; [field_name] [&amp;#34;!&amp;#34; conversion] [&amp;#34;:&amp;#34; format_spec] &amp;#34;}&amp;#34;
field_name         ::=  arg_name (&amp;#34;.&amp;#34; attribute_name | &amp;#34;[&amp;#34; element_index &amp;#34;]&amp;#34;)*
arg_name           ::=  [identifier | digit+]
attribute_name     ::=  identifier
element_index      ::=  digit+ | index_string
index_string       ::=  &amp;lt;any source character except &amp;#34;]&amp;#34;&amp;gt; +
conversion         ::=  &amp;#34;r&amp;#34; | &amp;#34;s&amp;#34; | &amp;#34;a&amp;#34;
format_spec        ::=  &amp;lt;described in the next section&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;# 标准格式说明符的一般形式是：
format_spec     ::=  [[fill]align][sign][#][0][width][grouping_option][.precision][type]
fill            ::=  &amp;lt;any character&amp;gt;
align           ::=  &amp;#34;&amp;lt;&amp;#34; | &amp;#34;&amp;gt;&amp;#34; | &amp;#34;=&amp;#34; | &amp;#34;^&amp;#34;
sign            ::=  &amp;#34;+&amp;#34; | &amp;#34;-&amp;#34; | &amp;#34; &amp;#34;
width           ::=  digit+
grouping_option ::=  &amp;#34;_&amp;#34; | &amp;#34;,&amp;#34;
precision       ::=  digit+
type            ::=  &amp;#34;b&amp;#34; | &amp;#34;c&amp;#34; | &amp;#34;d&amp;#34; | &amp;#34;e&amp;#34; | &amp;#34;E&amp;#34; | &amp;#34;f&amp;#34; | &amp;#34;F&amp;#34; | &amp;#34;g&amp;#34; | &amp;#34;G&amp;#34; | &amp;#34;n&amp;#34; | &amp;#34;o&amp;#34; | &amp;#34;s&amp;#34; | &amp;#34;x&amp;#34; | &amp;#34;X&amp;#34; | &amp;#34;%&amp;#34;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;常见用法-1&#34;&gt;常见用法&lt;/h3&gt;

&lt;h6 id=&#34;不指定位置-按默认顺序&#34;&gt;不指定位置，按默认顺序&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;{}{}{}&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;No1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;No2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;No3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;&amp;#39;No1No2No3&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;设置指定位置&#34;&gt;设置指定位置&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;{0}{1}{0}&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;No1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;No2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;No3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;&amp;#39;No1No2No1&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;直接设置参数&#34;&gt;直接设置参数&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;{thi}{sec}{fir}&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;No1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sec&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;No2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;thi&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;No3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;&amp;#39;No3No2No1&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;通过列表索引设置参数&#34;&gt;通过列表索引设置参数&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;itemlist&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;No1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;No2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;No3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;{0[0]}{0[1]}{0[2]}&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;itemlist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;&amp;#39;No1No2No3&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;通过字典设置参数&#34;&gt;通过字典设置参数&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;itemdict&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;fir&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;No1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;sec&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;No2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;thi&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;No3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;{fir}{sec}{thi}&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;itemdict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;&amp;#39;No1No2No3&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;字符串格式化之三-f-strings&#34;&gt;字符串格式化之三：&lt;code&gt;f-Strings&lt;/code&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;表达式：&lt;code&gt;f&#39; &amp;lt;text&amp;gt; {&amp;lt;expression&amp;gt;&amp;lt;optional !s, !r, or !a&amp;gt;&amp;lt;optional:format specifier&amp;gt;} &amp;lt;text&amp;gt; ...&#39;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;处理 f-string 中的花括号：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;{{}}&amp;#39;&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;&amp;#39;{}&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      
    </item>
    
    <item>
      <title>Python Launcher（for Windows）</title>
      <link>/2018/09/09/python-launcherfor-windows/</link>
      <pubDate>Sun, 09 Sep 2018 18:27:30 +0800</pubDate>
      
      <guid>/2018/09/09/python-launcherfor-windows/</guid>
      
        <description>

&lt;p&gt;[TOC]&lt;/p&gt;

&lt;h1 id=&#34;python-launcher-for-windows&#34;&gt;Python Launcher（for Windows）&lt;/h1&gt;

&lt;h2 id=&#34;1-什么是-python-launcher&#34;&gt;1. 什么是 Python Launcher&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;原文：&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;New in version 3.3.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The Python launcher for Windows is a utility which aids in locating and executing of different Python versions. It allows scripts (or the command-line) to indicate a preference for a specific Python version, and will locate and execute that version.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Unlike the PATH variable, the launcher will correctly select the most appropriate version of Python. It will prefer per-user installations over system-wide ones, and orders by language version rather than using the most recently installed version.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&amp;mdash;&amp;ndash;来源于 python 官方文档&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;翻译：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;3.3 版本新增功能&lt;/p&gt;

&lt;p&gt;适用于 Windows 的 Python 启动器是一个实用组件，可帮助您定位和执行不同的 Python 版本。它允许脚本（或命令行）为特定的 Python 版本指示首选项，定位并执行该版本。&lt;/p&gt;

&lt;p&gt;不同于 PATH 变量，Python Launcher 将正确选择最合适的 Python 版本。它更喜欢每个用户在系统范围内的安装，并且运行指定的 Python 版本，而不是使用最近安装的版本。&lt;/p&gt;

&lt;h2 id=&#34;2-python-launcher-的位置&#34;&gt;2. Python Launcher 的位置&lt;/h2&gt;

&lt;p&gt;在安装 Python 3.3 以上版本的 Python 时，我们可以看到下图中的一个选项，当我们勾选时，系统便会帮助我们自动安装 Python Launcher&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfn61ddmwlj20iw0bqgnw.jpg&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;当点击 Customize installation 时，会显示如下界面：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfn68kg4duj20iw0bq40r.jpg&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;图中标注的小字告诉我们，安装 Python Launcher 后可以通过全局命令 ‘py’ 来更方便地启动 Python。不勾选 launcher 项时，系统则不会安装 Python Launcher （但默认情况下该工具都是被勾选的）。&lt;/p&gt;

&lt;p&gt;安装好后，我们可以通过注册表和系统文件管理器中找到 py.exe 的位置:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;仅为当前用户安装时：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfn69n6194j20qj0e3ta2.jpg&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfn6a2mkejj20l20ejgmy.jpg&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;为所有用户安装时：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfn6azwjjvj20qj0e3abf.jpg&#34; alt=&#34;image&#34; /&gt;
&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfn6b9v8bxj20m50fhq56.jpg&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;3-python-launcher-的环境变量&#34;&gt;3. Python Launcher 的环境变量&lt;/h2&gt;

&lt;p&gt;为什么 Python Launcher 不需要手动配置环境变量呢？&lt;/p&gt;

&lt;p&gt;当为所有用户安装时，我们会发现 py.exe 被自动安装到 C:\Windows 下了，当我们检查系统默认设置的环境变量时，可以看到下图中的 windir 的值已经默认设置为 C:\Windows ，这第一点对于所有 Windows 系统都是相同的 ，系统安装的时候便会做这些工作。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfn6ccrmqpj20ay0badgh.jpg&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;当仅为当前用户安装时，我们会发现 py.exe 所在的路径会自动添加到系统的用户变量中：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfn6cwk3vcj20ay0bagmo.jpg&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;因此，无论以哪种方式安装 Python Launcher 我们都不需要再手动配置环境变量了。&lt;/p&gt;

&lt;h2 id=&#34;4-python-launcher-的用法&#34;&gt;4. Python Launcher 的用法&lt;/h2&gt;

&lt;p&gt;Python Launcher 的使用方法我们可以通过在命令行中输入 py -h 进行查看，如下图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfn6dbotnrj20i706bmx0.jpg&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;同样地，我们也可以通过查阅官方文档进行了解&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/using/windows.html#launcher&#34;&gt;https://docs.python.org/3/using/windows.html#launcher&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfn6do1wf3j20mn0ih0t8.jpg&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;5-结语&#34;&gt;5. 结语&lt;/h2&gt;

&lt;p&gt;综上所述，py -version 启动 python 的方式其实应该是官方更为推崇的一种方式，无需手动设置环境变量，并且能指定启动 python 的版本，功能不要太强大！绝对是在多版本 Python 共存的环境下，启动不同版本 Python 的利器！&lt;/p&gt;

&lt;p&gt;当是需要注意的是，Python Launcher 是 Python3.3 以上版本中新增的组件，并且可以独立地安装和卸载，使用时一定要注意 Python Launcher 被正确地安装在系统中了，否则就会报 &lt;em&gt;&amp;lsquo;py&amp;rsquo; 不是内部或外部命令，也不是可运行的程序或批处理文件&lt;/em&gt; 的错误，一定要注意哦！&lt;/p&gt;

&lt;p&gt;好了，本期调研的全部内容到这里就结束了，感谢大家阅览！(づ￣ 3 ￣)づ&lt;/br&gt;
我们下期再见！&lt;/br&gt;
[好累 ┭┮﹏┭┮ ，不要再有下期了&amp;hellip;]&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>使用 Sublime Text 3 编写 RF 脚本</title>
      <link>/2018/07/16/%E4%BD%BF%E7%94%A8-sublime-text-3-%E7%BC%96%E5%86%99-rf-%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Mon, 16 Jul 2018 14:34:07 +0800</pubDate>
      
      <guid>/2018/07/16/%E4%BD%BF%E7%94%A8-sublime-text-3-%E7%BC%96%E5%86%99-rf-%E8%84%9A%E6%9C%AC/</guid>
      
        <description>

&lt;p&gt;&lt;em&gt;RF 是最强的自动化测试框架， 没有之一！&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;前置条件&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;已安装 Python2.7&lt;/li&gt;
&lt;li&gt;已安装好 Robot Framework 框架和相关 Python2.x 测试库&lt;/li&gt;
&lt;li&gt;任何安装目录中都不要出现中文&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;一-安装配置-sublime-text-3&#34;&gt;一、安装配置 Sublime Text 3&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;在 Sublime 官网根据自己的系统下载并安装相应版本的 &lt;a href=&#34;http://www.sublimetext.com/3&#34;&gt;Sublime Text 3&lt;/a&gt;；&lt;/li&gt;
&lt;li&gt;根据 &lt;a href=&#34;https://packagecontrol.io/installation&#34;&gt;Package Control 官网&lt;/a&gt; 的说明安装该插件。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;二-安装配置-robotframeworkassistant&#34;&gt;二、安装配置 RobotFrameworkAssistant&lt;/h2&gt;

&lt;p&gt;说明文档：&lt;a href=&#34;https://packagecontrol.io/packages/RobotFrameworkAssistant&#34;&gt;https://packagecontrol.io/packages/RobotFrameworkAssistant&lt;/a&gt;&lt;br /&gt;
GitHub 地址：&lt;a href=&#34;https://github.com/andriyko/sublime-robot-framework-assistant&#34;&gt;https://github.com/andriyko/sublime-robot-framework-assistant&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;1-安装-robotframeworkassistant&#34;&gt;1. 安装 RobotFrameworkAssistant&lt;/h3&gt;

&lt;p&gt;安装过程图示：
&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfphy1v1zeg212w0n9jyd.gif&#34; alt=&#34;安装 RobotFrameworkAssistant.gif&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-配置-robotframeworkassistant&#34;&gt;2. 配置 RobotFrameworkAssistant&lt;/h3&gt;

&lt;p&gt;2.1 打开 &lt;code&gt;Robot.sublime-settings&lt;/code&gt; 文件，注意选择 &lt;code&gt;Setting - User&lt;/code&gt;：
&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfphykt21fj21340ni75o.jpg&#34; alt=&#34;打开 Robot.sublime-settings.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;2.2 修改 &lt;code&gt;Robot.sublime-settings&lt;/code&gt; 文件并保存：
&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfphz2h23hj21340ni0uk.jpg&#34; alt=&#34;image.png&#34; /&gt;
示例代码如下：（代码中的相关路径需要修改为自己机器中的实际路径）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Windows&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;Robot&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;Framework&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;Assistant&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;settings&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;panfeng&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;#34;path_to_python&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;C:\\Python27\\python.exe&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;#34;robot_framework_workspace&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;D:\\OneDrive\\TesterScript\\RF&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;#34;robot_framework_module_search_path&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;C:\\Python27\\Lib\\site-packages&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;#34;robot_framework_keyword_argument_format&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Mac&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;Robot&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;Framework&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;Assistant&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;settings&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;panfeng&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;#34;path_to_python&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;python3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;#34;robot_framework_workspace&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/Users/panfeng/workspace/RF&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;#34;robot_framework_module_search_path&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;#34;robot_framework_keyword_argument_format&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;注意：和 Python 有关的路径需要设置为 Python 2.x 版本，截止到目前 2018.07.16， Robot Framework Assistant 的 Python3 版本兼容性不是很好。&lt;/p&gt;

&lt;p&gt;2.3 安装配置完成后大致效果如下：（主题和字体可能不一样）
&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfphzi5nbzj21340ni0w0.jpg&#34; alt=&#34;image.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;2.4 打开 &lt;code&gt;Robot.sublime-build&lt;/code&gt; 配置文件：
&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfphzyeps9j21340niabg.jpg&#34; alt=&#34;打开 Robot.sublime-build.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;2.5 修改 &lt;code&gt;Robot.sublime-build&lt;/code&gt; 配置文件并保存：
&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfpi07ad74j21340nitb1.jpg&#34; alt=&#34;修改 Robot.sublime-build.png&#34; /&gt;
示例代码如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Windows&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;#34;cmd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;python&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;-m&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;robot.run&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;-d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$file&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;#34;selector&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;source.robot&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;#34;variants&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Selects the test cases by tag&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;cmd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;python&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;-m&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;robot.run&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;--include&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;REPLACE_WITH_TAG&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;-d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$file&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Selects the test cases by name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;cmd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;python&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;-m&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;robot&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;--test&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;REPLACE_WITH_TEST_NAME&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;-d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$file&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Mac&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;#34;cmd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;python3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;-m&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;robot&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;-d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$file&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;#34;selector&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;source.robot&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;#34;variants&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Selects the test cases by tag&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;cmd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;python3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;-m&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;robot&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;--include&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;REPLACE_WITH_TAG&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;-d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$file&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Selects the test cases by name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;cmd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;python3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;-m&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;robot&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;--test&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;REPLACE_WITH_TEST_NAME&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;-d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$file&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2.6 配置完成后即可通过 Sublime 的构建系统执行脚本
&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfpi36dqzug215w0psjy9.gif&#34; alt=&#34;使用构建系统执行脚本.gif&#34; /&gt;&lt;/p&gt;

&lt;p&gt;完成上述操作后，Sublime Text 3 便可以高亮显示 RF 语法，并进行相关层次的构建操作。但还不具备关键字自动补全的功能，想要让 Sublime Text 3 可以进行关键字自动补全，还需要进行 Database 的创建。&lt;/p&gt;

&lt;h6 id=&#34;4-创建-database&#34;&gt;4. 创建 Database&lt;/h6&gt;

&lt;p&gt;创建 Database 的操作十分简单，只需要通过 &lt;code&gt;导航栏 Preference --&amp;gt; Package Setting --&amp;gt; Robot Framework Assistant --&amp;gt; Create Datebase&lt;/code&gt; 或 &lt;code&gt;右键打开的 RF 文件 --&amp;gt; Robot Framework --&amp;gt; Datebase --&amp;gt; Create Datebase&lt;/code&gt; 进行创建即可。
&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfpi3msrtjj21340nijvj.jpg&#34; alt=&#34;创建 Database 1.png&#34; /&gt;
&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfpi3zquhbj21340nigpd.jpg&#34; alt=&#34;创建 Database 2.png&#34; /&gt;
创建成功后，左下角应该会显示 &lt;code&gt;Indexing done with rc: 0&lt;/code&gt; ，也可以通过打开 RobotFrameworkAssistant 插件目录（默认在 &lt;code&gt;C:\Users\用户名\AppData\Roaming\Sublime Text 3\Packages\RobotFrameworkAssistant\database&lt;/code&gt;）下的 database 查看是否创建成功，如果创建成功则会生成 index 和 scanner 两个文件夹。
&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfpi499cbqj20gr035q2z.jpg&#34; alt=&#34;image.png&#34; /&gt;
最终效果：
&lt;img src=&#34;http://ww1.sinaimg.cn/large/ed19fa55gy1gfpi4v0zb3g212w0n9n3w.gif&#34; alt=&#34;关键字自动补全效果.gif&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;个性化-sublime-text-3-配置-让-sublime-更加美观-可选&#34;&gt;个性化 Sublime Text 3 配置，让 Sublime 更加美观（可选）&lt;/h2&gt;

&lt;p&gt;主题：&lt;a href=&#34;https://github.com/dempfi/ayu&#34;&gt;ayu&lt;/a&gt;&lt;br /&gt;
字体：&lt;a href=&#34;https://fonts.google.com/specimen/Roboto+Mono&#34;&gt;Roboto Mono Medium&lt;/a&gt;
&lt;em&gt;（谷歌字体下载需要 fq）&lt;/em&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>测试点归纳-移动端</title>
      <link>/2018/07/03/%E6%B5%8B%E8%AF%95%E7%82%B9%E5%BD%92%E7%BA%B3-%E7%A7%BB%E5%8A%A8%E7%AB%AF/</link>
      <pubDate>Tue, 03 Jul 2018 13:20:20 +0800</pubDate>
      
      <guid>/2018/07/03/%E6%B5%8B%E8%AF%95%E7%82%B9%E5%BD%92%E7%BA%B3-%E7%A7%BB%E5%8A%A8%E7%AB%AF/</guid>
      
        <description>

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;总结归纳是积累经验获得成长最有效的方式&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;安装测试&#34;&gt;安装测试&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;要考虑软件的安装来源&lt;/strong&gt;&lt;br /&gt;
需测试直接安装 apk 包，以及从各应用市场中进行安装都能正常安装成功&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑覆盖安装的问题&lt;/strong&gt;&lt;br /&gt;
需测试高版本覆盖低版本时可正常安装成功（要注意是否保留用户数据）；&lt;br /&gt;
需测试同版本进行覆盖安装的情况，需测试低版本覆盖安装高版本时是否需要给出提示&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑安装位置的问题&lt;/strong&gt;&lt;br /&gt;
需测试无论是安装在手机上海市内存卡上都可安装成功&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑软件升级的问题&lt;/strong&gt;&lt;br /&gt;
需测试当有新版本时是否给出了合理的提示，需测试新的版本可以正确地覆盖安装旧版本软件，还需测试跨版本升级是否正常（需要测试各种网络环境下的升级）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑安装后的快捷方式&lt;/strong&gt;&lt;br /&gt;
需测试在存在二级目录的机器上，软件安装后会正确生成快捷方式，并且可通过快捷方式打开应用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑取消安装/升级的问题&lt;/strong&gt;&lt;br /&gt;
需要测试取消安装/升级时可以正确取消&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;卸载测试&#34;&gt;卸载测试&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;要考虑软件卸载是否彻底&lt;/strong&gt;&lt;br /&gt;
需测试卸载掉旧版本后 本地的所有 APP 的数据以及文件夹被正确删除，设置中的任何地方找不到软件的信息&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑软件卸载后重新安装&lt;/strong&gt;&lt;br /&gt;
需测试软件卸载后再次安装，软件需要的权限需要重新申请，软件之前的用户数据不会显示出来&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;运行时测试&#34;&gt;运行时测试&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;中断性测试&lt;/strong&gt;&lt;br /&gt;
需测试软件运行过程中突然来电、收到其他应用的信息、以及弹出其它具有中断效果的提示时，结束后软件是否正常运行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应用切换测试&lt;/strong&gt;&lt;br /&gt;
需测试软件运行时切换到其它程序再切换回来后，软件是否正常运行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;强制退出测试&lt;/strong&gt;&lt;br /&gt;
需测试通过后台强制关闭软件后，软件是否能再次正常启动，必要的信息是否自动进行了保留&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安卓特性测试&lt;/strong&gt;&lt;br /&gt;
需测试在软件运行过程中操作手机物理按钮或虚拟按钮时软件是否表现正常，需测试软件对安卓机器虚拟键的显示/隐藏都进行了 UI 适配，需测试手机横竖屏对软件运行的影响&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;疲劳测试&lt;/strong&gt;&lt;br /&gt;
需测试软件长时间运行后，手机内存是否过大，程序是否稳定，不会出现闪退现象；需测试软件和很多其他应用同时运行时，程序是否稳定&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;输入法测试&lt;/strong&gt;&lt;br /&gt;
需测试使用不同输入法（搜狗、讯飞、百度、QQ&amp;hellip;）均可在软件中正常输入&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑极限情况下的闪退问题&lt;/strong&gt;&lt;br /&gt;
需进行一些会占用巨大内存或 CPU 的操作，测试一下应用闪退的现象，并考虑是否在闪退前进行一些处理&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;弱网测试&lt;/strong&gt;&lt;br /&gt;
需测试在弱网或无网状态下，软件是否可以正常启动并运行，需测试弱网或无网状态下，软件是否存在必要的 loading 或提示，尤其是文件保存/下载的情况&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网络切换测试&lt;/strong&gt;&lt;br /&gt;
需测试软件运行过程中从蜂窝网络切换到 wifi 网络或从 wifi 网络切换到蜂窝网络时是否运行正常&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;息屏唤醒测试&lt;/strong&gt;&lt;br /&gt;
需测试手动或系统自动息屏后能否正常唤醒并显示息屏前的软件页面&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;声音独占测试&lt;/strong&gt;&lt;br /&gt;
需测试当软件在播放声音时会自动停止其他声音的播放，要考虑退出软件/息屏时软件正在播放声音是否要自动暂停&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;耳机插拔测试&lt;/strong&gt;&lt;br /&gt;
需测试当软件在播放声音插拔耳机，软件是否会正常切换输出源或是自动暂停/播放声音&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;参考来源：&lt;br /&gt;
编程猫创作工具组测试内部研讨&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>测试点归纳 客户端Windows</title>
      <link>/2018/05/15/%E6%B5%8B%E8%AF%95%E7%82%B9%E5%BD%92%E7%BA%B3-%E5%AE%A2%E6%88%B7%E7%AB%AFwindows/</link>
      <pubDate>Tue, 15 May 2018 13:23:58 +0800</pubDate>
      
      <guid>/2018/05/15/%E6%B5%8B%E8%AF%95%E7%82%B9%E5%BD%92%E7%BA%B3-%E5%AE%A2%E6%88%B7%E7%AB%AFwindows/</guid>
      
        <description>

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;总结归纳是积累经验获得成长最有效的方式&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;安装测试&#34;&gt;安装测试&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;要考虑监控软件的影响&lt;/strong&gt;&lt;br /&gt;
需测试各种杀毒软件（卡巴、瑞星、360、QQ 电脑管家、mcafee、金山等等）、防火墙（天网、comodo、zonealarm、windows 自带防火墙等等）对安装程序的影响。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑安装目录的问题&lt;/strong&gt;&lt;br /&gt;
需测试以默认目录、修改后的目录、空目录、带有特殊字符目录、中英文目录、长目录安装是否正常。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑安装过程中对网络的要求&lt;/strong&gt;&lt;br /&gt;
需测试断网状况下和联网状况下的安装是否正常。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑安装程序时对系统库的依赖&lt;/strong&gt;&lt;br /&gt;
需测试系统缺少相关库文件时，是否会正常给出提示。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑覆盖安装的问题&lt;/strong&gt;&lt;br /&gt;
需测试相同版本和新版本覆盖旧版本时软件能正常安装且安装后功能正常，旧版本覆盖新版本时会给出合理提示，被覆盖程序正在运行时给出合理提示。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑安装后的快捷方式&lt;/strong&gt;&lt;br /&gt;
需测试桌面或启动栏或任务栏或其它文件夹中是否需要添加相应的快捷方式，添加的快捷方式图标是否显示正常。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑软件安装的兼容性&lt;/strong&gt;&lt;br /&gt;
需测试在常用系统下（XP/Win7/Win10）的不同版本中（32 位/64 位）软件能否正常安装。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;启动测试&#34;&gt;启动测试&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;要考虑启动时对网络的要求&lt;/strong&gt;&lt;br /&gt;
需测试正常网络和无网络环境下软件是否均能正常启动，对于通过技术手段打包的 Web 客户端还需要测试各种环境下页面显示是否正常。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑启动时是否会被监控程序阻止&lt;/strong&gt;&lt;br /&gt;
需测试各种杀毒软件、防火墙对软件启动的影响，尤其要注意是否会拦截网络连接。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑启动时系统时间的影响&lt;/strong&gt;&lt;br /&gt;
需测试将系统时间向前或向后调整 1~5 年时间，程序是否仍可以正常启动并正确显示，再有网或无网状态下均能运行的软件还需要测试有网和断网两种情况。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑重复启动的情况&lt;/strong&gt;&lt;br /&gt;
需测试软件是否支持重复启动，支持的要测试启动后软件功能正常，不支持的要测试重复启动时是否给出合理提示。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑软件启动方式的情况&lt;/strong&gt;&lt;br /&gt;
需要测试通过快捷方式、.exe 的启动程序、开始屏幕（Win10）、任务栏，或是第三方桌面和第三方软件（如果有）是否都能正常启动软件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑启动时用户登录的问题&lt;/strong&gt;&lt;br /&gt;
需测试软件是否有用户登录的功能，软件是否支持用户自动登录，以及登录信息的有效期。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑在不同权限的用户下的启动&lt;/strong&gt;&lt;br /&gt;
需测试在管理员和普通用户权限下软件均能正常启动。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑启动时的兼容性问题&lt;/strong&gt;&lt;br /&gt;
需测试在常用系统下（XP/Win7/Win10）的不同版本中（32 位/64 位）软件是否都能正确启动，在不同语言（CN/EN）的系统中软件是否都能正确启动，在不同的系统主题下软件是否都能正确启动，在兼容模式或以管理员权限启动是否正常。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;运行测试&#34;&gt;运行测试&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;要考虑运行时对网络的要求&lt;/strong&gt;&lt;br /&gt;
需测试可以断网环境下使用的功能是否都能正常使用，在断网环境下使用需要网络支持的功能是否会给出合理提示。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑运行时对系统输入法的支持&lt;/strong&gt;&lt;br /&gt;
需测试在软件中可以使用市面上常用的输入法（微软、搜狗、QQ、百度、五笔）进行输入操作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑运行时是否会被监控程序影响&lt;/strong&gt;&lt;br /&gt;
需测试各种杀毒软件、防火墙对软件运行的影响，尤其要注意是否会拦截网络连接或是报毒。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑计算机休眠、待机后再启动软件的情况&lt;/strong&gt;&lt;br /&gt;
需测试计算机休眠、待机后软件之前的运行状态是否被正常保留。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑长时间运行软件的问题&lt;/strong&gt;&lt;br /&gt;
需测试长时间不间断运行软件是否会出现内存溢出或异常退出的问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑极限情况下的客户端闪退问题&lt;/strong&gt;&lt;br /&gt;
需进行一些会占用巨大内存或 CPU 的操作，测试一下客户端闪退的现象，并考虑是否在闪退前进行一些处理。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;卸载测试&#34;&gt;卸载测试&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;要考虑软件本身是否提供卸载程序&lt;/strong&gt;&lt;br /&gt;
需测试通过软件自身的卸载程序是否能够正确卸载软件，删除整个文件安装目录或清空注册表。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑使用第三方软件卸载的问题&lt;/strong&gt;&lt;br /&gt;
需测试通过第三方软件或系统是否能够正确卸载软件，删除整个文件安装目录或清空注册表。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要考虑软件运行时卸载的问题&lt;/strong&gt;&lt;br /&gt;
需测试软件在运行时进行卸载，是否会给出正确的提示，或者关闭程序。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;参考来源：&lt;br /&gt;
编程猫创作工具组测试内部研讨&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
  </channel>
</rss>
